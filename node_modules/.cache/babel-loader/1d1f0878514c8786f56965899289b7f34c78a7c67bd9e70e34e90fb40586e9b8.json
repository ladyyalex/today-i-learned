{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nvar GoTrueAdminApi = /*#__PURE__*/function () {\n  function GoTrueAdminApi(_ref) {\n    var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      fetch = _ref.fetch;\n    _classCallCheck(this, GoTrueAdminApi);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  _createClass(GoTrueAdminApi, [{\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwt) {\n        var scope,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              scope = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'global';\n              _context.prev = 1;\n              _context.next = 4;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/logout?scope=\").concat(scope), {\n                headers: this.headers,\n                jwt: jwt,\n                noResolveJson: true\n              });\n            case 4:\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: null\n              });\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              if (!isAuthError(_context.t0)) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 11:\n              throw _context.t0;\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n      function signOut(_x) {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n  }, {\n    key: \"inviteUserByEmail\",\n    value: function () {\n      var _inviteUserByEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email) {\n        var options,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/invite\"), {\n                body: {\n                  email: email,\n                  data: options.data\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse\n              });\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              if (!isAuthError(_context2.t0)) {\n                _context2.next = 11;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context2.t0\n              });\n            case 11:\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[1, 7]]);\n      }));\n      function inviteUserByEmail(_x2) {\n        return _inviteUserByEmail.apply(this, arguments);\n      }\n      return inviteUserByEmail;\n    }()\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n  }, {\n    key: \"generateLink\",\n    value: function () {\n      var _generateLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n        var options, rest, body;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              options = params.options, rest = __rest(params, [\"options\"]);\n              body = Object.assign(Object.assign({}, rest), options);\n              if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n              }\n              _context3.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/generate_link\"), {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n              });\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (!isAuthError(_context3.t0)) {\n                _context3.next = 13;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  properties: null,\n                  user: null\n                },\n                error: _context3.t0\n              });\n            case 13:\n              throw _context3.t0;\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function generateLink(_x3) {\n        return _generateLink.apply(this, arguments);\n      }\n      return generateLink;\n    }() // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"createUser\",\n    value: function () {\n      var _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(attributes) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/users\"), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              if (!isAuthError(_context4.t0)) {\n                _context4.next = 10;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context4.t0\n              });\n            case 10:\n              throw _context4.t0;\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n      function createUser(_x4) {\n        return _createUser.apply(this, arguments);\n      }\n      return createUser;\n    }()\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n  }, {\n    key: \"listUsers\",\n    value: function () {\n      var _listUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {\n        var _a, _b, _c, _d, _e, _f, _g, pagination, response, users, total, links;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              pagination = {\n                nextPage: null,\n                lastPage: 0,\n                total: 0\n              };\n              _context5.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users\"), {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                  page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                  per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n                },\n                xform: _noResolveJsonResponse\n              });\n            case 4:\n              response = _context5.sent;\n              if (!response.error) {\n                _context5.next = 7;\n                break;\n              }\n              throw response.error;\n            case 7:\n              _context5.next = 9;\n              return response.json();\n            case 9:\n              users = _context5.sent;\n              total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n              links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n              if (links.length > 0) {\n                links.forEach(function (link) {\n                  var page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                  var rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                  pagination[\"\".concat(rel, \"Page\")] = page;\n                });\n                pagination.total = parseInt(total);\n              }\n              return _context5.abrupt(\"return\", {\n                data: Object.assign(Object.assign({}, users), pagination),\n                error: null\n              });\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              if (!isAuthError(_context5.t0)) {\n                _context5.next = 20;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                data: {\n                  users: []\n                },\n                error: _context5.t0\n              });\n            case 20:\n              throw _context5.t0;\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 16]]);\n      }));\n      function listUsers(_x5) {\n        return _listUsers.apply(this, arguments);\n      }\n      return listUsers;\n    }()\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"getUserById\",\n    value: function () {\n      var _getUserById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(uid) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t0)) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context6.t0\n              });\n            case 10:\n              throw _context6.t0;\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 6]]);\n      }));\n      function getUserById(_x6) {\n        return _getUserById.apply(this, arguments);\n      }\n      return getUserById;\n    }()\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"updateUserById\",\n    value: function () {\n      var _updateUserById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(uid, attributes) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _request(this.fetch, 'PUT', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 10;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context7.t0\n              });\n            case 10:\n              throw _context7.t0;\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n      function updateUserById(_x7, _x8) {\n        return _updateUserById.apply(this, arguments);\n      }\n      return updateUserById;\n    }()\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id) {\n        var shouldSoftDelete,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              shouldSoftDelete = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : false;\n              _context8.prev = 1;\n              _context8.next = 4;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                headers: this.headers,\n                body: {\n                  should_soft_delete: shouldSoftDelete\n                },\n                xform: _userResponse\n              });\n            case 4:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](1);\n              if (!isAuthError(_context8.t0)) {\n                _context8.next = 11;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context8.t0\n              });\n            case 11:\n              throw _context8.t0;\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[1, 7]]);\n      }));\n      function deleteUser(_x9) {\n        return _deleteUser.apply(this, arguments);\n      }\n      return deleteUser;\n    }()\n  }, {\n    key: \"_listFactors\",\n    value: function () {\n      var _listFactors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(params) {\n        var _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                headers: this.headers,\n                xform: function xform(factors) {\n                  return {\n                    data: {\n                      factors: factors\n                    },\n                    error: null\n                  };\n                }\n              });\n            case 3:\n              _yield$_request = _context9.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              return _context9.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              if (!isAuthError(_context9.t0)) {\n                _context9.next = 13;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: null,\n                error: _context9.t0\n              });\n            case 13:\n              throw _context9.t0;\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 9]]);\n      }));\n      function _listFactors(_x10) {\n        return _listFactors2.apply(this, arguments);\n      }\n      return _listFactors;\n    }()\n  }, {\n    key: \"_deleteFactor\",\n    value: function () {\n      var _deleteFactor2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(params) {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                headers: this.headers\n              });\n            case 3:\n              data = _context10.sent;\n              return _context10.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              if (!isAuthError(_context10.t0)) {\n                _context10.next = 11;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: null,\n                error: _context10.t0\n              });\n            case 11:\n              throw _context10.t0;\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[0, 7]]);\n      }));\n      function _deleteFactor(_x11) {\n        return _deleteFactor2.apply(this, arguments);\n      }\n      return _deleteFactor;\n    }()\n  }]);\n  return GoTrueAdminApi;\n}();\nexport { GoTrueAdminApi as default };","map":{"version":3,"names":["_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","_ref","_ref$url","url","_ref$headers","headers","fetch","_classCallCheck","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","_createClass","key","value","_signOut","_asyncToGenerator","_regeneratorRuntime","mark","_callee","jwt","scope","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","concat","noResolveJson","abrupt","data","error","t0","stop","signOut","_x","apply","_inviteUserByEmail","_callee2","email","options","_args2","_callee2$","_context2","body","redirectTo","xform","sent","user","inviteUserByEmail","_x2","_generateLink","_callee3","params","rest","_callee3$","_context3","__rest","Object","assign","new_email","newEmail","properties","generateLink","_x3","_createUser","_callee4","attributes","_callee4$","_context4","createUser","_x4","_listUsers","_callee5","_a","_b","_c","_d","_e","_f","_g","pagination","response","users","total","links","_callee5$","_context5","nextPage","lastPage","query","page","toString","per_page","perPage","json","get","split","forEach","link","parseInt","substring","rel","JSON","parse","listUsers","_x5","_getUserById","_callee6","uid","_callee6$","_context6","getUserById","_x6","_updateUserById","_callee7","_callee7$","_context7","updateUserById","_x7","_x8","_deleteUser","_callee8","id","shouldSoftDelete","_args8","_callee8$","_context8","should_soft_delete","deleteUser","_x9","_listFactors2","_callee9","_yield$_request","_callee9$","_context9","userId","factors","_x10","_deleteFactor2","_callee10","_callee10$","_context10","_x11","default"],"sources":["/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@supabase/gotrue-js/src/GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(\n    jwt: string,\n    scope: 'global' | 'local' | 'others' = 'global'\n  ): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}