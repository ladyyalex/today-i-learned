{"ast":null,"code":"import _toConsumableArray from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, generatePKCEVerifier, generatePKCEChallenge, supportsLocalStorage, parseParametersFromURL } from './lib/helpers';\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError } from './lib/locks';\npolyfillGlobalThis(); // Make \"globalThis\" available\nvar DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false\n};\n/** Current session will be checked for refresh at this interval. */\nvar AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nvar AUTO_REFRESH_TICK_THRESHOLD = 3;\nfunction lockNoOp(_x, _x2, _x3) {\n  return _lockNoOp.apply(this, arguments);\n}\nfunction _lockNoOp() {\n  _lockNoOp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee95(name, acquireTimeout, fn) {\n    return _regeneratorRuntime().wrap(function _callee95$(_context95) {\n      while (1) switch (_context95.prev = _context95.next) {\n        case 0:\n          _context95.next = 2;\n          return fn();\n        case 2:\n          return _context95.abrupt(\"return\", _context95.sent);\n        case 3:\n        case \"end\":\n          return _context95.stop();\n      }\n    }, _callee95);\n  }));\n  return _lockNoOp.apply(this, arguments);\n}\nvar GoTrueClient = /*#__PURE__*/function () {\n  /**\n   * Create a new client for use in the browser.\n   */\n  function GoTrueClient(options) {\n    var _this = this;\n    _classCallCheck(this, GoTrueClient);\n    var _a;\n    this.memoryStorage = null;\n    this.stateChangeEmitters = new Map();\n    this.autoRefreshTicker = null;\n    this.visibilityChangedCallback = null;\n    this.refreshingDeferred = null;\n    /**\n     * Keeps track of the async client initialization.\n     * When null or not yet resolved the auth state is `unknown`\n     * Once resolved the the auth state is known and it's save to call any further client methods.\n     * Keep extra care to never reject or throw uncaught errors\n     */\n    this.initializePromise = null;\n    this.detectSessionInUrl = true;\n    this.lockAcquired = false;\n    this.pendingInLock = [];\n    /**\n     * Used to broadcast state change events to other tabs listening.\n     */\n    this.broadcastChannel = null;\n    this.logger = console.log;\n    this.instanceID = GoTrueClient.nextInstanceID;\n    GoTrueClient.nextInstanceID += 1;\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n    }\n    var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.logDebugMessages = !!settings.debug;\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug;\n    }\n    this.persistSession = settings.persistSession;\n    this.storageKey = settings.storageKey;\n    this.autoRefreshToken = settings.autoRefreshToken;\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch\n    });\n    this.url = settings.url;\n    this.headers = settings.headers;\n    this.fetch = resolveFetch(settings.fetch);\n    this.lock = settings.lock || lockNoOp;\n    this.detectSessionInUrl = settings.detectSessionInUrl;\n    this.flowType = settings.flowType;\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n    };\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage;\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = localStorageAdapter;\n        } else {\n          this.memoryStorage = {};\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n      }\n    } else {\n      this.memoryStorage = {};\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n    }\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n      } catch (e) {\n        console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n      }\n      (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _this._debug('received broadcast notification from other tab or client', event);\n                _context.next = 3;\n                return _this._notifyAllSubscribers(event.data.event, event.data.session, false);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n    this.initialize();\n  }\n  _createClass(GoTrueClient, [{\n    key: \"_debug\",\n    value: function _debug() {\n      if (this.logDebugMessages) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        this.logger.apply(this, [\"GoTrueClient@\".concat(this.instanceID, \" (\").concat(version, \") \").concat(new Date().toISOString())].concat(args));\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.initializePromise) {\n                _context4.next = 4;\n                break;\n              }\n              _context4.next = 3;\n              return this.initializePromise;\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 4:\n              this.initializePromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                          while (1) switch (_context2.prev = _context2.next) {\n                            case 0:\n                              _context2.next = 2;\n                              return _this2._initialize();\n                            case 2:\n                              return _context2.abrupt(\"return\", _context2.sent);\n                            case 3:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }, _callee2);\n                      })));\n                    case 2:\n                      return _context3.abrupt(\"return\", _context3.sent);\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }))();\n              _context4.next = 7;\n              return this.initializePromise;\n            case 7:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function initialize() {\n        return _initialize2.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n  }, {\n    key: \"_initialize\",\n    value: function () {\n      var _initialize3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this3 = this;\n        var isPKCEFlow, _yield$this$_getSessi, data, error, session, redirectType;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              if (!isBrowser()) {\n                _context6.next = 7;\n                break;\n              }\n              _context6.next = 4;\n              return this._isPKCEFlow();\n            case 4:\n              _context6.t0 = _context6.sent;\n              _context6.next = 8;\n              break;\n            case 7:\n              _context6.t0 = false;\n            case 8:\n              isPKCEFlow = _context6.t0;\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow);\n              if (!(isPKCEFlow || this.detectSessionInUrl && this._isImplicitGrantFlow())) {\n                _context6.next = 27;\n                break;\n              }\n              _context6.next = 13;\n              return this._getSessionFromURL(isPKCEFlow);\n            case 13:\n              _yield$this$_getSessi = _context6.sent;\n              data = _yield$this$_getSessi.data;\n              error = _yield$this$_getSessi.error;\n              if (!error) {\n                _context6.next = 21;\n                break;\n              }\n              this._debug('#_initialize()', 'error detecting session from URL', error);\n              // failed login attempt via url,\n              // remove old session as in verifyOtp, signUp and signInWith*\n              _context6.next = 20;\n              return this._removeSession();\n            case 20:\n              return _context6.abrupt(\"return\", {\n                error: error\n              });\n            case 21:\n              session = data.session, redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              _context6.next = 25;\n              return this._saveSession(session);\n            case 25:\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!(redirectType === 'recovery')) {\n                        _context5.next = 5;\n                        break;\n                      }\n                      _context5.next = 3;\n                      return _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    case 3:\n                      _context5.next = 7;\n                      break;\n                    case 5:\n                      _context5.next = 7;\n                      return _this3._notifyAllSubscribers('SIGNED_IN', session);\n                    case 7:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5);\n              })), 0);\n              return _context6.abrupt(\"return\", {\n                error: null\n              });\n            case 27:\n              _context6.next = 29;\n              return this._recoverAndRefresh();\n            case 29:\n              return _context6.abrupt(\"return\", {\n                error: null\n              });\n            case 32:\n              _context6.prev = 32;\n              _context6.t1 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t1)) {\n                _context6.next = 36;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                error: _context6.t1\n              });\n            case 36:\n              return _context6.abrupt(\"return\", {\n                error: new AuthUnknownError('Unexpected error during initialization', _context6.t1)\n              });\n            case 37:\n              _context6.prev = 37;\n              _context6.next = 40;\n              return this._handleVisibilityChange();\n            case 40:\n              this._debug('#_initialize()', 'end');\n              return _context6.finish(37);\n            case 42:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 32, 37, 42]]);\n      }));\n      function _initialize() {\n        return _initialize3.apply(this, arguments);\n      }\n      return _initialize;\n    }()\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n  }, {\n    key: \"signUp\",\n    value: function () {\n      var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(credentials) {\n        var _a, _b, _c, res, email, password, options, codeChallenge, codeChallengeMethod, codeVerifier, phone, _password, _options, _res, data, error, session, user;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context7.next = 20;\n                break;\n              }\n              email = credentials.email, password = credentials.password, options = credentials.options;\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context7.next = 15;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context7.next = 11;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 11:\n              _context7.next = 13;\n              return generatePKCEChallenge(codeVerifier);\n            case 13:\n              codeChallenge = _context7.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 15:\n              _context7.next = 17;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email: email,\n                  password: password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: _sessionResponse\n              });\n            case 17:\n              res = _context7.sent;\n              _context7.next = 28;\n              break;\n            case 20:\n              if (!('phone' in credentials)) {\n                _context7.next = 27;\n                break;\n              }\n              phone = credentials.phone, _password = credentials.password, _options = credentials.options;\n              _context7.next = 24;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 24:\n              res = _context7.sent;\n              _context7.next = 28;\n              break;\n            case 27:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            case 28:\n              _res = res, data = _res.data, error = _res.error;\n              if (!(error || !data)) {\n                _context7.next = 31;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 31:\n              session = data.session;\n              user = data.user;\n              if (!data.session) {\n                _context7.next = 38;\n                break;\n              }\n              _context7.next = 36;\n              return this._saveSession(data.session);\n            case 36:\n              _context7.next = 38;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 38:\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: user,\n                  session: session\n                },\n                error: null\n              });\n            case 41:\n              _context7.prev = 41;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 45;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context7.t0\n              });\n            case 45:\n              throw _context7.t0;\n            case 46:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 41]]);\n      }));\n      function signUp(_x5) {\n        return _signUp.apply(this, arguments);\n      }\n      return signUp;\n    }()\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n  }, {\n    key: \"signInWithPassword\",\n    value: function () {\n      var _signInWithPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(credentials) {\n        var res, email, password, options, phone, _password2, _options2, _res2, data, error;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context8.next = 10;\n                break;\n              }\n              email = credentials.email, password = credentials.password, options = credentials.options;\n              _context8.next = 7;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  password: password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 7:\n              res = _context8.sent;\n              _context8.next = 18;\n              break;\n            case 10:\n              if (!('phone' in credentials)) {\n                _context8.next = 17;\n                break;\n              }\n              phone = credentials.phone, _password2 = credentials.password, _options2 = credentials.options;\n              _context8.next = 14;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 14:\n              res = _context8.sent;\n              _context8.next = 18;\n              break;\n            case 17:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            case 18:\n              _res2 = res, data = _res2.data, error = _res2.error;\n              if (!error) {\n                _context8.next = 23;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 23:\n              if (!(!data || !data.session || !data.user)) {\n                _context8.next = 25;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 25:\n              if (!data.session) {\n                _context8.next = 30;\n                break;\n              }\n              _context8.next = 28;\n              return this._saveSession(data.session);\n            case 28:\n              _context8.next = 30;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 30:\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: data.user,\n                  session: data.session\n                },\n                error: error\n              });\n            case 33:\n              _context8.prev = 33;\n              _context8.t0 = _context8[\"catch\"](0);\n              if (!isAuthError(_context8.t0)) {\n                _context8.next = 37;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context8.t0\n              });\n            case 37:\n              throw _context8.t0;\n            case 38:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 33]]);\n      }));\n      function signInWithPassword(_x6) {\n        return _signInWithPassword.apply(this, arguments);\n      }\n      return signInWithPassword;\n    }()\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n  }, {\n    key: \"signInWithOAuth\",\n    value: function () {\n      var _signInWithOAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(credentials) {\n        var _a, _b, _c, _d;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this._removeSession();\n            case 2:\n              _context9.next = 4;\n              return this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n              });\n            case 4:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function signInWithOAuth(_x7) {\n        return _signInWithOAuth.apply(this, arguments);\n      }\n      return signInWithOAuth;\n    }()\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n  }, {\n    key: \"exchangeCodeForSession\",\n    value: function () {\n      var _exchangeCodeForSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(authCode) {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.initializePromise;\n            case 2:\n              return _context11.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n                return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                  while (1) switch (_context10.prev = _context10.next) {\n                    case 0:\n                      return _context10.abrupt(\"return\", _this4._exchangeCodeForSession(authCode));\n                    case 1:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }, _callee10);\n              }))));\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function exchangeCodeForSession(_x8) {\n        return _exchangeCodeForSession2.apply(this, arguments);\n      }\n      return exchangeCodeForSession;\n    }()\n  }, {\n    key: \"_exchangeCodeForSession\",\n    value: function () {\n      var _exchangeCodeForSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(authCode) {\n        var codeVerifier, _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 2:\n              codeVerifier = _context12.sent;\n              _context12.next = 5;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=pkce\"), {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: _sessionResponse\n              });\n            case 5:\n              _yield$_request = _context12.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              _context12.next = 10;\n              return removeItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 10:\n              if (!error) {\n                _context12.next = 14;\n                break;\n              }\n              return _context12.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 14:\n              if (!(!data || !data.session || !data.user)) {\n                _context12.next = 16;\n                break;\n              }\n              return _context12.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 16:\n              if (!data.session) {\n                _context12.next = 21;\n                break;\n              }\n              _context12.next = 19;\n              return this._saveSession(data.session);\n            case 19:\n              _context12.next = 21;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 21:\n              return _context12.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 22:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function _exchangeCodeForSession(_x9) {\n        return _exchangeCodeForSession3.apply(this, arguments);\n      }\n      return _exchangeCodeForSession;\n    }()\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n  }, {\n    key: \"signInWithIdToken\",\n    value: function () {\n      var _signInWithIdToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(credentials) {\n        var options, provider, token, access_token, nonce, res, data, error;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this._removeSession();\n            case 2:\n              _context13.prev = 2;\n              options = credentials.options, provider = credentials.provider, token = credentials.token, access_token = credentials.access_token, nonce = credentials.nonce;\n              _context13.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=id_token\"), {\n                headers: this.headers,\n                body: {\n                  provider: provider,\n                  id_token: token,\n                  access_token: access_token,\n                  nonce: nonce,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 6:\n              res = _context13.sent;\n              data = res.data, error = res.error;\n              if (!error) {\n                _context13.next = 12;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 12:\n              if (!(!data || !data.session || !data.user)) {\n                _context13.next = 14;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 14:\n              if (!data.session) {\n                _context13.next = 19;\n                break;\n              }\n              _context13.next = 17;\n              return this._saveSession(data.session);\n            case 17:\n              _context13.next = 19;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 19:\n              return _context13.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 22:\n              _context13.prev = 22;\n              _context13.t0 = _context13[\"catch\"](2);\n              if (!isAuthError(_context13.t0)) {\n                _context13.next = 26;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context13.t0\n              });\n            case 26:\n              throw _context13.t0;\n            case 27:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this, [[2, 22]]);\n      }));\n      function signInWithIdToken(_x10) {\n        return _signInWithIdToken.apply(this, arguments);\n      }\n      return signInWithIdToken;\n    }()\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n  }, {\n    key: \"signInWithOtp\",\n    value: function () {\n      var _signInWithOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(credentials) {\n        var _a, _b, _c, _d, _e, email, options, codeChallenge, codeChallengeMethod, codeVerifier, _yield$_request2, error, phone, _options3, _yield$_request3, data, _error;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              _context14.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context14.next = 20;\n                break;\n              }\n              email = credentials.email, options = credentials.options;\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context14.next = 15;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context14.next = 11;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 11:\n              _context14.next = 13;\n              return generatePKCEChallenge(codeVerifier);\n            case 13:\n              codeChallenge = _context14.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 15:\n              _context14.next = 17;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n              });\n            case 17:\n              _yield$_request2 = _context14.sent;\n              error = _yield$_request2.error;\n              return _context14.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 20:\n              if (!('phone' in credentials)) {\n                _context14.next = 28;\n                break;\n              }\n              phone = credentials.phone, _options3 = credentials.options;\n              _context14.next = 24;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                  create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                  gotrue_meta_security: {\n                    captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                  },\n                  channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                }\n              });\n            case 24:\n              _yield$_request3 = _context14.sent;\n              data = _yield$_request3.data;\n              _error = _yield$_request3.error;\n              return _context14.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              });\n            case 28:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            case 31:\n              _context14.prev = 31;\n              _context14.t0 = _context14[\"catch\"](0);\n              if (!isAuthError(_context14.t0)) {\n                _context14.next = 35;\n                break;\n              }\n              return _context14.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context14.t0\n              });\n            case 35:\n              throw _context14.t0;\n            case 36:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this, [[0, 31]]);\n      }));\n      function signInWithOtp(_x11) {\n        return _signInWithOtp.apply(this, arguments);\n      }\n      return signInWithOtp;\n    }()\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n  }, {\n    key: \"verifyOtp\",\n    value: function () {\n      var _verifyOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var _a, _b, redirectTo, captchaToken, _yield$_request4, data, error, session, user;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              if (!(params.type !== 'email_change' && params.type !== 'phone_change')) {\n                _context15.next = 4;\n                break;\n              }\n              _context15.next = 4;\n              return this._removeSession();\n            case 4:\n              redirectTo = undefined;\n              captchaToken = undefined;\n              if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n              }\n              _context15.next = 9;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/verify\"), {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo: redirectTo,\n                xform: _sessionResponse\n              });\n            case 9:\n              _yield$_request4 = _context15.sent;\n              data = _yield$_request4.data;\n              error = _yield$_request4.error;\n              if (!error) {\n                _context15.next = 14;\n                break;\n              }\n              throw error;\n            case 14:\n              if (data) {\n                _context15.next = 16;\n                break;\n              }\n              throw new Error('An error occurred on token verification.');\n            case 16:\n              session = data.session;\n              user = data.user;\n              if (!(session === null || session === void 0 ? void 0 : session.access_token)) {\n                _context15.next = 23;\n                break;\n              }\n              _context15.next = 21;\n              return this._saveSession(session);\n            case 21:\n              _context15.next = 23;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 23:\n              return _context15.abrupt(\"return\", {\n                data: {\n                  user: user,\n                  session: session\n                },\n                error: null\n              });\n            case 26:\n              _context15.prev = 26;\n              _context15.t0 = _context15[\"catch\"](0);\n              if (!isAuthError(_context15.t0)) {\n                _context15.next = 30;\n                break;\n              }\n              return _context15.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context15.t0\n              });\n            case 30:\n              throw _context15.t0;\n            case 31:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[0, 26]]);\n      }));\n      function verifyOtp(_x12) {\n        return _verifyOtp.apply(this, arguments);\n      }\n      return verifyOtp;\n    }()\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n  }, {\n    key: \"signInWithSSO\",\n    value: function () {\n      var _signInWithSSO = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var _a, _b, _c;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return this._removeSession();\n            case 3:\n              _context16.next = 5;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/sso\"), {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                  provider_id: params.providerId\n                } : null), 'domain' in params ? {\n                  domain: params.domain\n                } : null), {\n                  redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n                }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: params.options.captchaToken\n                  }\n                } : null), {\n                  skip_http_redirect: true\n                }),\n                headers: this.headers,\n                xform: _ssoResponse\n              });\n            case 5:\n              return _context16.abrupt(\"return\", _context16.sent);\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](0);\n              if (!isAuthError(_context16.t0)) {\n                _context16.next = 12;\n                break;\n              }\n              return _context16.abrupt(\"return\", {\n                data: null,\n                error: _context16.t0\n              });\n            case 12:\n              throw _context16.t0;\n            case 13:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this, [[0, 8]]);\n      }));\n      function signInWithSSO(_x13) {\n        return _signInWithSSO.apply(this, arguments);\n      }\n      return signInWithSSO;\n    }()\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n  }, {\n    key: \"reauthenticate\",\n    value: function () {\n      var _reauthenticate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.initializePromise;\n            case 2:\n              _context18.next = 4;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n                return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                  while (1) switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return _this5._reauthenticate();\n                    case 2:\n                      return _context17.abrupt(\"return\", _context17.sent);\n                    case 3:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }, _callee17);\n              })));\n            case 4:\n              return _context18.abrupt(\"return\", _context18.sent);\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function reauthenticate() {\n        return _reauthenticate2.apply(this, arguments);\n      }\n      return reauthenticate;\n    }()\n  }, {\n    key: \"_reauthenticate\",\n    value: function () {\n      var _reauthenticate3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _context20.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(result) {\n                  var session, sessionError, _yield$_request5, error;\n                  return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n                    while (1) switch (_context19.prev = _context19.next) {\n                      case 0:\n                        session = result.data.session, sessionError = result.error;\n                        if (!sessionError) {\n                          _context19.next = 3;\n                          break;\n                        }\n                        throw sessionError;\n                      case 3:\n                        if (session) {\n                          _context19.next = 5;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 5:\n                        _context19.next = 7;\n                        return _request(_this6.fetch, 'GET', \"\".concat(_this6.url, \"/reauthenticate\"), {\n                          headers: _this6.headers,\n                          jwt: session.access_token\n                        });\n                      case 7:\n                        _yield$_request5 = _context19.sent;\n                        error = _yield$_request5.error;\n                        return _context19.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: error\n                        });\n                      case 10:\n                      case \"end\":\n                        return _context19.stop();\n                    }\n                  }, _callee19);\n                }));\n                return function (_x14) {\n                  return _ref7.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context20.abrupt(\"return\", _context20.sent);\n            case 6:\n              _context20.prev = 6;\n              _context20.t0 = _context20[\"catch\"](0);\n              if (!isAuthError(_context20.t0)) {\n                _context20.next = 10;\n                break;\n              }\n              return _context20.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context20.t0\n              });\n            case 10:\n              throw _context20.t0;\n            case 11:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this, [[0, 6]]);\n      }));\n      function _reauthenticate() {\n        return _reauthenticate3.apply(this, arguments);\n      }\n      return _reauthenticate;\n    }()\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n  }, {\n    key: \"resend\",\n    value: function () {\n      var _resend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(credentials) {\n        var endpoint, email, type, options, _yield$_request6, error, phone, _type, _options4, _yield$_request7, data, _error2;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              if (!(credentials.type != 'email_change' && credentials.type != 'phone_change')) {\n                _context21.next = 4;\n                break;\n              }\n              _context21.next = 4;\n              return this._removeSession();\n            case 4:\n              endpoint = \"\".concat(this.url, \"/resend\");\n              if (!('email' in credentials)) {\n                _context21.next = 14;\n                break;\n              }\n              email = credentials.email, type = credentials.type, options = credentials.options;\n              _context21.next = 9;\n              return _request(this.fetch, 'POST', endpoint, {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  type: type,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n              });\n            case 9:\n              _yield$_request6 = _context21.sent;\n              error = _yield$_request6.error;\n              return _context21.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 14:\n              if (!('phone' in credentials)) {\n                _context21.next = 22;\n                break;\n              }\n              phone = credentials.phone, _type = credentials.type, _options4 = credentials.options;\n              _context21.next = 18;\n              return _request(this.fetch, 'POST', endpoint, {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  type: _type,\n                  gotrue_meta_security: {\n                    captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                  }\n                }\n              });\n            case 18:\n              _yield$_request7 = _context21.sent;\n              data = _yield$_request7.data;\n              _error2 = _yield$_request7.error;\n              return _context21.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              });\n            case 22:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n            case 25:\n              _context21.prev = 25;\n              _context21.t0 = _context21[\"catch\"](0);\n              if (!isAuthError(_context21.t0)) {\n                _context21.next = 29;\n                break;\n              }\n              return _context21.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context21.t0\n              });\n            case 29:\n              throw _context21.t0;\n            case 30:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this, [[0, 25]]);\n      }));\n      function resend(_x15) {\n        return _resend.apply(this, arguments);\n      }\n      return resend;\n    }()\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n  }, {\n    key: \"getSession\",\n    value: function () {\n      var _getSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var _this7 = this;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this.initializePromise;\n            case 2:\n              return _context24.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n                return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n                  while (1) switch (_context23.prev = _context23.next) {\n                    case 0:\n                      return _context23.abrupt(\"return\", _this7._useSession( /*#__PURE__*/function () {\n                        var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(result) {\n                          return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n                            while (1) switch (_context22.prev = _context22.next) {\n                              case 0:\n                                return _context22.abrupt(\"return\", result);\n                              case 1:\n                              case \"end\":\n                                return _context22.stop();\n                            }\n                          }, _callee22);\n                        }));\n                        return function (_x16) {\n                          return _ref9.apply(this, arguments);\n                        };\n                      }()));\n                    case 1:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }, _callee23);\n              }))));\n            case 3:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function getSession() {\n        return _getSession.apply(this, arguments);\n      }\n      return getSession;\n    }()\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n  }, {\n    key: \"_acquireLock\",\n    value: function () {\n      var _acquireLock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(acquireTimeout, fn) {\n        var _this8 = this;\n        var last, result;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              this._debug('#_acquireLock', 'begin', acquireTimeout);\n              _context29.prev = 1;\n              if (!this.lockAcquired) {\n                _context29.next = 7;\n                break;\n              }\n              last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              result = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n                return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n                  while (1) switch (_context25.prev = _context25.next) {\n                    case 0:\n                      _context25.next = 2;\n                      return last;\n                    case 2:\n                      _context25.next = 4;\n                      return fn();\n                    case 4:\n                      return _context25.abrupt(\"return\", _context25.sent);\n                    case 5:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }, _callee25);\n              }))();\n              this.pendingInLock.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n                return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n                  while (1) switch (_context26.prev = _context26.next) {\n                    case 0:\n                      _context26.prev = 0;\n                      _context26.next = 3;\n                      return result;\n                    case 3:\n                      _context26.next = 7;\n                      break;\n                    case 5:\n                      _context26.prev = 5;\n                      _context26.t0 = _context26[\"catch\"](0);\n                    case 7:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }, _callee26, null, [[0, 5]]);\n              }))());\n              return _context29.abrupt(\"return\", result);\n            case 7:\n              _context29.next = 9;\n              return this.lock(\"lock:\".concat(this.storageKey), acquireTimeout, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n                var _result, waitOn;\n                return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n                  while (1) switch (_context28.prev = _context28.next) {\n                    case 0:\n                      _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n                      _context28.prev = 1;\n                      _this8.lockAcquired = true;\n                      _result = fn();\n                      _this8.pendingInLock.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n                        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n                          while (1) switch (_context27.prev = _context27.next) {\n                            case 0:\n                              _context27.prev = 0;\n                              _context27.next = 3;\n                              return _result;\n                            case 3:\n                              _context27.next = 7;\n                              break;\n                            case 5:\n                              _context27.prev = 5;\n                              _context27.t0 = _context27[\"catch\"](0);\n                            case 7:\n                            case \"end\":\n                              return _context27.stop();\n                          }\n                        }, _callee27, null, [[0, 5]]);\n                      }))());\n                      _context28.next = 7;\n                      return _result;\n                    case 7:\n                      if (!_this8.pendingInLock.length) {\n                        _context28.next = 14;\n                        break;\n                      }\n                      waitOn = _toConsumableArray(_this8.pendingInLock);\n                      _context28.next = 11;\n                      return Promise.all(waitOn);\n                    case 11:\n                      _this8.pendingInLock.splice(0, waitOn.length);\n                      _context28.next = 7;\n                      break;\n                    case 14:\n                      _context28.next = 16;\n                      return _result;\n                    case 16:\n                      return _context28.abrupt(\"return\", _context28.sent);\n                    case 17:\n                      _context28.prev = 17;\n                      _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                      _this8.lockAcquired = false;\n                      return _context28.finish(17);\n                    case 21:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }, _callee28, null, [[1,, 17, 21]]);\n              })));\n            case 9:\n              return _context29.abrupt(\"return\", _context29.sent);\n            case 10:\n              _context29.prev = 10;\n              this._debug('#_acquireLock', 'end');\n              return _context29.finish(10);\n            case 13:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this, [[1,, 10, 13]]);\n      }));\n      function _acquireLock(_x17, _x18) {\n        return _acquireLock2.apply(this, arguments);\n      }\n      return _acquireLock;\n    }()\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n  }, {\n    key: \"_useSession\",\n    value: function () {\n      var _useSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(fn) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              this._debug('#_useSession', 'begin');\n              _context30.prev = 1;\n              _context30.next = 4;\n              return this.__loadSession();\n            case 4:\n              result = _context30.sent;\n              _context30.next = 7;\n              return fn(result);\n            case 7:\n              return _context30.abrupt(\"return\", _context30.sent);\n            case 8:\n              _context30.prev = 8;\n              this._debug('#_useSession', 'end');\n              return _context30.finish(8);\n            case 11:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this, [[1,, 8, 11]]);\n      }));\n      function _useSession(_x19) {\n        return _useSession2.apply(this, arguments);\n      }\n      return _useSession;\n    }()\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n  }, {\n    key: \"__loadSession\",\n    value: function () {\n      var _loadSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {\n        var currentSession, maybeSession, hasExpired, _yield$this$_callRefr, session, error;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              this._debug('#__loadSession()', 'begin');\n              if (!this.lockAcquired) {\n                this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n              }\n              _context31.prev = 2;\n              currentSession = null;\n              _context31.next = 6;\n              return getItemAsync(this.storage, this.storageKey);\n            case 6:\n              maybeSession = _context31.sent;\n              this._debug('#getSession()', 'session from storage', maybeSession);\n              if (!(maybeSession !== null)) {\n                _context31.next = 16;\n                break;\n              }\n              if (!this._isValidSession(maybeSession)) {\n                _context31.next = 13;\n                break;\n              }\n              currentSession = maybeSession;\n              _context31.next = 16;\n              break;\n            case 13:\n              this._debug('#getSession()', 'session from storage is not valid');\n              _context31.next = 16;\n              return this._removeSession();\n            case 16:\n              if (currentSession) {\n                _context31.next = 18;\n                break;\n              }\n              return _context31.abrupt(\"return\", {\n                data: {\n                  session: null\n                },\n                error: null\n              });\n            case 18:\n              hasExpired = currentSession.expires_at ? currentSession.expires_at <= Date.now() / 1000 : false;\n              this._debug('#__loadSession()', \"session has\".concat(hasExpired ? '' : ' not', \" expired\"), 'expires_at', currentSession.expires_at);\n              if (hasExpired) {\n                _context31.next = 22;\n                break;\n              }\n              return _context31.abrupt(\"return\", {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              });\n            case 22:\n              _context31.next = 24;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 24:\n              _yield$this$_callRefr = _context31.sent;\n              session = _yield$this$_callRefr.session;\n              error = _yield$this$_callRefr.error;\n              if (!error) {\n                _context31.next = 29;\n                break;\n              }\n              return _context31.abrupt(\"return\", {\n                data: {\n                  session: null\n                },\n                error: error\n              });\n            case 29:\n              return _context31.abrupt(\"return\", {\n                data: {\n                  session: session\n                },\n                error: null\n              });\n            case 30:\n              _context31.prev = 30;\n              this._debug('#__loadSession()', 'end');\n              return _context31.finish(30);\n            case 33:\n            case \"end\":\n              return _context31.stop();\n          }\n        }, _callee31, this, [[2,, 30, 33]]);\n      }));\n      function __loadSession() {\n        return _loadSession.apply(this, arguments);\n      }\n      return __loadSession;\n    }()\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(jwt) {\n        var _this9 = this;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              if (!jwt) {\n                _context33.next = 4;\n                break;\n              }\n              _context33.next = 3;\n              return this._getUser(jwt);\n            case 3:\n              return _context33.abrupt(\"return\", _context33.sent);\n            case 4:\n              _context33.next = 6;\n              return this.initializePromise;\n            case 6:\n              return _context33.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n                return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n                  while (1) switch (_context32.prev = _context32.next) {\n                    case 0:\n                      _context32.next = 2;\n                      return _this9._getUser();\n                    case 2:\n                      return _context32.abrupt(\"return\", _context32.sent);\n                    case 3:\n                    case \"end\":\n                      return _context32.stop();\n                  }\n                }, _callee32);\n              }))));\n            case 7:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33, this);\n      }));\n      function getUser(_x20) {\n        return _getUser2.apply(this, arguments);\n      }\n      return getUser;\n    }()\n  }, {\n    key: \"_getUser\",\n    value: function () {\n      var _getUser3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(jwt) {\n        var _this10 = this;\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) switch (_context35.prev = _context35.next) {\n            case 0:\n              _context35.prev = 0;\n              if (!jwt) {\n                _context35.next = 5;\n                break;\n              }\n              _context35.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/user\"), {\n                headers: this.headers,\n                jwt: jwt,\n                xform: _userResponse\n              });\n            case 4:\n              return _context35.abrupt(\"return\", _context35.sent);\n            case 5:\n              _context35.next = 7;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(result) {\n                  var _a, _b, data, error;\n                  return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n                    while (1) switch (_context34.prev = _context34.next) {\n                      case 0:\n                        data = result.data, error = result.error;\n                        if (!error) {\n                          _context34.next = 3;\n                          break;\n                        }\n                        throw error;\n                      case 3:\n                        _context34.next = 5;\n                        return _request(_this10.fetch, 'GET', \"\".concat(_this10.url, \"/user\"), {\n                          headers: _this10.headers,\n                          jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                          xform: _userResponse\n                        });\n                      case 5:\n                        return _context34.abrupt(\"return\", _context34.sent);\n                      case 6:\n                      case \"end\":\n                        return _context34.stop();\n                    }\n                  }, _callee34);\n                }));\n                return function (_x22) {\n                  return _ref15.apply(this, arguments);\n                };\n              }());\n            case 7:\n              return _context35.abrupt(\"return\", _context35.sent);\n            case 10:\n              _context35.prev = 10;\n              _context35.t0 = _context35[\"catch\"](0);\n              if (!isAuthError(_context35.t0)) {\n                _context35.next = 14;\n                break;\n              }\n              return _context35.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context35.t0\n              });\n            case 14:\n              throw _context35.t0;\n            case 15:\n            case \"end\":\n              return _context35.stop();\n          }\n        }, _callee35, this, [[0, 10]]);\n      }));\n      function _getUser(_x21) {\n        return _getUser3.apply(this, arguments);\n      }\n      return _getUser;\n    }()\n    /**\n     * Updates user data for a logged in user.\n     */\n  }, {\n    key: \"updateUser\",\n    value: function () {\n      var _updateUser2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(attributes) {\n        var _this11 = this;\n        var options,\n          _args37 = arguments;\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) switch (_context37.prev = _context37.next) {\n            case 0:\n              options = _args37.length > 1 && _args37[1] !== undefined ? _args37[1] : {};\n              _context37.next = 3;\n              return this.initializePromise;\n            case 3:\n              _context37.next = 5;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n                return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n                  while (1) switch (_context36.prev = _context36.next) {\n                    case 0:\n                      _context36.next = 2;\n                      return _this11._updateUser(attributes, options);\n                    case 2:\n                      return _context36.abrupt(\"return\", _context36.sent);\n                    case 3:\n                    case \"end\":\n                      return _context36.stop();\n                  }\n                }, _callee36);\n              })));\n            case 5:\n              return _context37.abrupt(\"return\", _context37.sent);\n            case 6:\n            case \"end\":\n              return _context37.stop();\n          }\n        }, _callee37, this);\n      }));\n      function updateUser(_x23) {\n        return _updateUser2.apply(this, arguments);\n      }\n      return updateUser;\n    }()\n  }, {\n    key: \"_updateUser\",\n    value: function () {\n      var _updateUser3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(attributes) {\n        var _this12 = this;\n        var options,\n          _args39 = arguments;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              options = _args39.length > 1 && _args39[1] !== undefined ? _args39[1] : {};\n              _context39.prev = 1;\n              _context39.next = 4;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(result) {\n                  var sessionData, sessionError, session, codeChallenge, codeChallengeMethod, codeVerifier, _yield$_request8, data, userError;\n                  return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n                    while (1) switch (_context38.prev = _context38.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context38.next = 3;\n                          break;\n                        }\n                        throw sessionError;\n                      case 3:\n                        if (sessionData.session) {\n                          _context38.next = 5;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 5:\n                        session = sessionData.session;\n                        codeChallenge = null;\n                        codeChallengeMethod = null;\n                        if (!(_this12.flowType === 'pkce' && attributes.email != null)) {\n                          _context38.next = 16;\n                          break;\n                        }\n                        codeVerifier = generatePKCEVerifier();\n                        _context38.next = 12;\n                        return setItemAsync(_this12.storage, \"\".concat(_this12.storageKey, \"-code-verifier\"), codeVerifier);\n                      case 12:\n                        _context38.next = 14;\n                        return generatePKCEChallenge(codeVerifier);\n                      case 14:\n                        codeChallenge = _context38.sent;\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                      case 16:\n                        _context38.next = 18;\n                        return _request(_this12.fetch, 'PUT', \"\".concat(_this12.url, \"/user\"), {\n                          headers: _this12.headers,\n                          redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                          body: Object.assign(Object.assign({}, attributes), {\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod\n                          }),\n                          jwt: session.access_token,\n                          xform: _userResponse\n                        });\n                      case 18:\n                        _yield$_request8 = _context38.sent;\n                        data = _yield$_request8.data;\n                        userError = _yield$_request8.error;\n                        if (!userError) {\n                          _context38.next = 23;\n                          break;\n                        }\n                        throw userError;\n                      case 23:\n                        session.user = data.user;\n                        _context38.next = 26;\n                        return _this12._saveSession(session);\n                      case 26:\n                        _context38.next = 28;\n                        return _this12._notifyAllSubscribers('USER_UPDATED', session);\n                      case 28:\n                        return _context38.abrupt(\"return\", {\n                          data: {\n                            user: session.user\n                          },\n                          error: null\n                        });\n                      case 29:\n                      case \"end\":\n                        return _context38.stop();\n                    }\n                  }, _callee38);\n                }));\n                return function (_x25) {\n                  return _ref17.apply(this, arguments);\n                };\n              }());\n            case 4:\n              return _context39.abrupt(\"return\", _context39.sent);\n            case 7:\n              _context39.prev = 7;\n              _context39.t0 = _context39[\"catch\"](1);\n              if (!isAuthError(_context39.t0)) {\n                _context39.next = 11;\n                break;\n              }\n              return _context39.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context39.t0\n              });\n            case 11:\n              throw _context39.t0;\n            case 12:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this, [[1, 7]]);\n      }));\n      function _updateUser(_x24) {\n        return _updateUser3.apply(this, arguments);\n      }\n      return _updateUser;\n    }()\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n  }, {\n    key: \"_decodeJWT\",\n    value: function _decodeJWT(jwt) {\n      return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n  }, {\n    key: \"setSession\",\n    value: function () {\n      var _setSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(currentSession) {\n        var _this13 = this;\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) switch (_context41.prev = _context41.next) {\n            case 0:\n              _context41.next = 2;\n              return this.initializePromise;\n            case 2:\n              _context41.next = 4;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n                return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n                  while (1) switch (_context40.prev = _context40.next) {\n                    case 0:\n                      _context40.next = 2;\n                      return _this13._setSession(currentSession);\n                    case 2:\n                      return _context40.abrupt(\"return\", _context40.sent);\n                    case 3:\n                    case \"end\":\n                      return _context40.stop();\n                  }\n                }, _callee40);\n              })));\n            case 4:\n              return _context41.abrupt(\"return\", _context41.sent);\n            case 5:\n            case \"end\":\n              return _context41.stop();\n          }\n        }, _callee41, this);\n      }));\n      function setSession(_x26) {\n        return _setSession2.apply(this, arguments);\n      }\n      return setSession;\n    }()\n  }, {\n    key: \"_setSession\",\n    value: function () {\n      var _setSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(currentSession) {\n        var timeNow, expiresAt, hasExpired, session, payload, _yield$this$_callRefr2, refreshedSession, error, _yield$this$_getUser, data, _error3;\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.prev = 0;\n              if (!(!currentSession.access_token || !currentSession.refresh_token)) {\n                _context42.next = 3;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 3:\n              timeNow = Date.now() / 1000;\n              expiresAt = timeNow;\n              hasExpired = true;\n              session = null;\n              payload = decodeJWTPayload(currentSession.access_token);\n              if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n              }\n              if (!hasExpired) {\n                _context42.next = 22;\n                break;\n              }\n              _context42.next = 12;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 12:\n              _yield$this$_callRefr2 = _context42.sent;\n              refreshedSession = _yield$this$_callRefr2.session;\n              error = _yield$this$_callRefr2.error;\n              if (!error) {\n                _context42.next = 17;\n                break;\n              }\n              return _context42.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 17:\n              if (refreshedSession) {\n                _context42.next = 19;\n                break;\n              }\n              return _context42.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: null\n              });\n            case 19:\n              session = refreshedSession;\n              _context42.next = 34;\n              break;\n            case 22:\n              _context42.next = 24;\n              return this._getUser(currentSession.access_token);\n            case 24:\n              _yield$this$_getUser = _context42.sent;\n              data = _yield$this$_getUser.data;\n              _error3 = _yield$this$_getUser.error;\n              if (!_error3) {\n                _context42.next = 29;\n                break;\n              }\n              throw _error3;\n            case 29:\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              _context42.next = 32;\n              return this._saveSession(session);\n            case 32:\n              _context42.next = 34;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 34:\n              return _context42.abrupt(\"return\", {\n                data: {\n                  user: session.user,\n                  session: session\n                },\n                error: null\n              });\n            case 37:\n              _context42.prev = 37;\n              _context42.t0 = _context42[\"catch\"](0);\n              if (!isAuthError(_context42.t0)) {\n                _context42.next = 41;\n                break;\n              }\n              return _context42.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: _context42.t0\n              });\n            case 41:\n              throw _context42.t0;\n            case 42:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this, [[0, 37]]);\n      }));\n      function _setSession(_x27) {\n        return _setSession3.apply(this, arguments);\n      }\n      return _setSession;\n    }()\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n  }, {\n    key: \"refreshSession\",\n    value: function () {\n      var _refreshSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(currentSession) {\n        var _this14 = this;\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) switch (_context44.prev = _context44.next) {\n            case 0:\n              _context44.next = 2;\n              return this.initializePromise;\n            case 2:\n              _context44.next = 4;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {\n                return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n                  while (1) switch (_context43.prev = _context43.next) {\n                    case 0:\n                      _context43.next = 2;\n                      return _this14._refreshSession(currentSession);\n                    case 2:\n                      return _context43.abrupt(\"return\", _context43.sent);\n                    case 3:\n                    case \"end\":\n                      return _context43.stop();\n                  }\n                }, _callee43);\n              })));\n            case 4:\n              return _context44.abrupt(\"return\", _context44.sent);\n            case 5:\n            case \"end\":\n              return _context44.stop();\n          }\n        }, _callee44, this);\n      }));\n      function refreshSession(_x28) {\n        return _refreshSession2.apply(this, arguments);\n      }\n      return refreshSession;\n    }()\n  }, {\n    key: \"_refreshSession\",\n    value: function () {\n      var _refreshSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(currentSession) {\n        var _this15 = this;\n        return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n          while (1) switch (_context46.prev = _context46.next) {\n            case 0:\n              _context46.prev = 0;\n              _context46.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(result) {\n                  var _a, data, _error4, _yield$_this15$_callR, session, error;\n                  return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n                    while (1) switch (_context45.prev = _context45.next) {\n                      case 0:\n                        if (currentSession) {\n                          _context45.next = 5;\n                          break;\n                        }\n                        data = result.data, _error4 = result.error;\n                        if (!_error4) {\n                          _context45.next = 4;\n                          break;\n                        }\n                        throw _error4;\n                      case 4:\n                        currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                      case 5:\n                        if (currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token) {\n                          _context45.next = 7;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 7:\n                        _context45.next = 9;\n                        return _this15._callRefreshToken(currentSession.refresh_token);\n                      case 9:\n                        _yield$_this15$_callR = _context45.sent;\n                        session = _yield$_this15$_callR.session;\n                        error = _yield$_this15$_callR.error;\n                        if (!error) {\n                          _context45.next = 14;\n                          break;\n                        }\n                        return _context45.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: error\n                        });\n                      case 14:\n                        if (session) {\n                          _context45.next = 16;\n                          break;\n                        }\n                        return _context45.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: null\n                        });\n                      case 16:\n                        return _context45.abrupt(\"return\", {\n                          data: {\n                            user: session.user,\n                            session: session\n                          },\n                          error: null\n                        });\n                      case 17:\n                      case \"end\":\n                        return _context45.stop();\n                    }\n                  }, _callee45);\n                }));\n                return function (_x30) {\n                  return _ref20.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context46.abrupt(\"return\", _context46.sent);\n            case 6:\n              _context46.prev = 6;\n              _context46.t0 = _context46[\"catch\"](0);\n              if (!isAuthError(_context46.t0)) {\n                _context46.next = 10;\n                break;\n              }\n              return _context46.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context46.t0\n              });\n            case 10:\n              throw _context46.t0;\n            case 11:\n            case \"end\":\n              return _context46.stop();\n          }\n        }, _callee46, this, [[0, 6]]);\n      }));\n      function _refreshSession(_x29) {\n        return _refreshSession3.apply(this, arguments);\n      }\n      return _refreshSession;\n    }()\n    /**\n     * Gets the session data from a URL string\n     */\n  }, {\n    key: \"_getSessionFromURL\",\n    value: function () {\n      var _getSessionFromURL2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(isPKCEFlow) {\n        var params, _yield$this$_exchange, _data, _error5, url, provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, timeNow, expiresIn, expiresAt, actuallyExpiresIn, issuedAt, _yield$this$_getUser2, data, error, session;\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) switch (_context47.prev = _context47.next) {\n            case 0:\n              _context47.prev = 0;\n              if (isBrowser()) {\n                _context47.next = 3;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('No browser detected.');\n            case 3:\n              if (!(this.flowType === 'implicit' && !this._isImplicitGrantFlow())) {\n                _context47.next = 7;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            case 7:\n              if (!(this.flowType == 'pkce' && !isPKCEFlow)) {\n                _context47.next = 9;\n                break;\n              }\n              throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            case 9:\n              params = parseParametersFromURL(window.location.href);\n              if (!isPKCEFlow) {\n                _context47.next = 24;\n                break;\n              }\n              if (params.code) {\n                _context47.next = 13;\n                break;\n              }\n              throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n            case 13:\n              _context47.next = 15;\n              return this._exchangeCodeForSession(params.code);\n            case 15:\n              _yield$this$_exchange = _context47.sent;\n              _data = _yield$this$_exchange.data;\n              _error5 = _yield$this$_exchange.error;\n              if (!_error5) {\n                _context47.next = 20;\n                break;\n              }\n              throw _error5;\n            case 20:\n              url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return _context47.abrupt(\"return\", {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              });\n            case 24:\n              if (!(params.error || params.error_description || params.error_code)) {\n                _context47.next = 26;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            case 26:\n              provider_token = params.provider_token, provider_refresh_token = params.provider_refresh_token, access_token = params.access_token, refresh_token = params.refresh_token, expires_in = params.expires_in, expires_at = params.expires_at, token_type = params.token_type;\n              if (!(!access_token || !expires_in || !refresh_token || !token_type)) {\n                _context47.next = 29;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            case 29:\n              timeNow = Math.round(Date.now() / 1000);\n              expiresIn = parseInt(expires_in);\n              expiresAt = timeNow + expiresIn;\n              if (expires_at) {\n                expiresAt = parseInt(expires_at);\n              }\n              actuallyExpiresIn = expiresAt - timeNow;\n              if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n                console.warn(\"@supabase/gotrue-js: Session as retrieved from URL expires in \".concat(actuallyExpiresIn, \"s, should have been closer to \").concat(expiresIn, \"s\"));\n              }\n              issuedAt = expiresAt - expiresIn;\n              if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n              } else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew', issuedAt, expiresAt, timeNow);\n              }\n              _context47.next = 39;\n              return this._getUser(access_token);\n            case 39:\n              _yield$this$_getUser2 = _context47.sent;\n              data = _yield$this$_getUser2.data;\n              error = _yield$this$_getUser2.error;\n              if (!error) {\n                _context47.next = 44;\n                break;\n              }\n              throw error;\n            case 44:\n              session = {\n                provider_token: provider_token,\n                provider_refresh_token: provider_refresh_token,\n                access_token: access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token: refresh_token,\n                token_type: token_type,\n                user: data.user\n              }; // Remove tokens from URL\n              window.location.hash = '';\n              this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n              return _context47.abrupt(\"return\", {\n                data: {\n                  session: session,\n                  redirectType: params.type\n                },\n                error: null\n              });\n            case 50:\n              _context47.prev = 50;\n              _context47.t0 = _context47[\"catch\"](0);\n              if (!isAuthError(_context47.t0)) {\n                _context47.next = 54;\n                break;\n              }\n              return _context47.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error: _context47.t0\n              });\n            case 54:\n              throw _context47.t0;\n            case 55:\n            case \"end\":\n              return _context47.stop();\n          }\n        }, _callee47, this, [[0, 50]]);\n      }));\n      function _getSessionFromURL(_x31) {\n        return _getSessionFromURL2.apply(this, arguments);\n      }\n      return _getSessionFromURL;\n    }()\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n  }, {\n    key: \"_isImplicitGrantFlow\",\n    value: function _isImplicitGrantFlow() {\n      var params = parseParametersFromURL(window.location.href);\n      return !!(isBrowser() && (params.access_token || params.error_description));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n  }, {\n    key: \"_isPKCEFlow\",\n    value: function () {\n      var _isPKCEFlow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {\n        var params, currentStorageContent;\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) switch (_context48.prev = _context48.next) {\n            case 0:\n              params = parseParametersFromURL(window.location.href);\n              _context48.next = 3;\n              return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 3:\n              currentStorageContent = _context48.sent;\n              return _context48.abrupt(\"return\", !!(params.code && currentStorageContent));\n            case 5:\n            case \"end\":\n              return _context48.stop();\n          }\n        }, _callee48, this);\n      }));\n      function _isPKCEFlow() {\n        return _isPKCEFlow2.apply(this, arguments);\n      }\n      return _isPKCEFlow;\n    }()\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using others scope, no `SIGNED_OUT` event is fired!\n     */\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {\n        var _this16 = this;\n        var options,\n          _args50 = arguments;\n        return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n          while (1) switch (_context50.prev = _context50.next) {\n            case 0:\n              options = _args50.length > 0 && _args50[0] !== undefined ? _args50[0] : {\n                scope: 'global'\n              };\n              _context50.next = 3;\n              return this.initializePromise;\n            case 3:\n              _context50.next = 5;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {\n                return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n                  while (1) switch (_context49.prev = _context49.next) {\n                    case 0:\n                      _context49.next = 2;\n                      return _this16._signOut(options);\n                    case 2:\n                      return _context49.abrupt(\"return\", _context49.sent);\n                    case 3:\n                    case \"end\":\n                      return _context49.stop();\n                  }\n                }, _callee49);\n              })));\n            case 5:\n              return _context50.abrupt(\"return\", _context50.sent);\n            case 6:\n            case \"end\":\n              return _context50.stop();\n          }\n        }, _callee50, this);\n      }));\n      function signOut() {\n        return _signOut2.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }, {\n    key: \"_signOut\",\n    value: function () {\n      var _signOut3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {\n        var _this17 = this;\n        var _ref22,\n          scope,\n          _args52 = arguments;\n        return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n          while (1) switch (_context52.prev = _context52.next) {\n            case 0:\n              _ref22 = _args52.length > 0 && _args52[0] !== undefined ? _args52[0] : {\n                scope: 'global'\n              }, scope = _ref22.scope;\n              _context52.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(result) {\n                  var _a, data, sessionError, accessToken, _yield$_this17$admin$, error;\n                  return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n                    while (1) switch (_context51.prev = _context51.next) {\n                      case 0:\n                        data = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context51.next = 3;\n                          break;\n                        }\n                        return _context51.abrupt(\"return\", {\n                          error: sessionError\n                        });\n                      case 3:\n                        accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n                        if (!accessToken) {\n                          _context51.next = 12;\n                          break;\n                        }\n                        _context51.next = 7;\n                        return _this17.admin.signOut(accessToken, scope);\n                      case 7:\n                        _yield$_this17$admin$ = _context51.sent;\n                        error = _yield$_this17$admin$.error;\n                        if (!error) {\n                          _context51.next = 12;\n                          break;\n                        }\n                        if (isAuthApiError(error) && (error.status === 404 || error.status === 401)) {\n                          _context51.next = 12;\n                          break;\n                        }\n                        return _context51.abrupt(\"return\", {\n                          error: error\n                        });\n                      case 12:\n                        if (!(scope !== 'others')) {\n                          _context51.next = 19;\n                          break;\n                        }\n                        _context51.next = 15;\n                        return _this17._removeSession();\n                      case 15:\n                        _context51.next = 17;\n                        return removeItemAsync(_this17.storage, \"\".concat(_this17.storageKey, \"-code-verifier\"));\n                      case 17:\n                        _context51.next = 19;\n                        return _this17._notifyAllSubscribers('SIGNED_OUT', null);\n                      case 19:\n                        return _context51.abrupt(\"return\", {\n                          error: null\n                        });\n                      case 20:\n                      case \"end\":\n                        return _context51.stop();\n                    }\n                  }, _callee51);\n                }));\n                return function (_x32) {\n                  return _ref23.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context52.abrupt(\"return\", _context52.sent);\n            case 4:\n            case \"end\":\n              return _context52.stop();\n          }\n        }, _callee52, this);\n      }));\n      function _signOut() {\n        return _signOut3.apply(this, arguments);\n      }\n      return _signOut;\n    }()\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n  }, {\n    key: \"onAuthStateChange\",\n    value: function onAuthStateChange(callback) {\n      var _this18 = this;\n      var id = uuid();\n      var subscription = {\n        id: id,\n        callback: callback,\n        unsubscribe: function unsubscribe() {\n          _this18._debug('#unsubscribe()', 'state change callback with id removed', id);\n          _this18.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {\n        return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n          while (1) switch (_context54.prev = _context54.next) {\n            case 0:\n              _context54.next = 2;\n              return _this18.initializePromise;\n            case 2:\n              _context54.next = 4;\n              return _this18._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {\n                return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n                  while (1) switch (_context53.prev = _context53.next) {\n                    case 0:\n                      _this18._emitInitialSession(id);\n                    case 1:\n                    case \"end\":\n                      return _context53.stop();\n                  }\n                }, _callee53);\n              })));\n            case 4:\n            case \"end\":\n              return _context54.stop();\n          }\n        }, _callee54);\n      }))();\n      return {\n        data: {\n          subscription: subscription\n        }\n      };\n    }\n  }, {\n    key: \"_emitInitialSession\",\n    value: function () {\n      var _emitInitialSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56(id) {\n        var _this19 = this;\n        return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n          while (1) switch (_context56.prev = _context56.next) {\n            case 0:\n              _context56.next = 2;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(result) {\n                  var _a, _b, session, error;\n                  return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n                    while (1) switch (_context55.prev = _context55.next) {\n                      case 0:\n                        _context55.prev = 0;\n                        session = result.data.session, error = result.error;\n                        if (!error) {\n                          _context55.next = 4;\n                          break;\n                        }\n                        throw error;\n                      case 4:\n                        _context55.next = 6;\n                        return (_a = _this19.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                      case 6:\n                        _this19._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n                        _context55.next = 15;\n                        break;\n                      case 9:\n                        _context55.prev = 9;\n                        _context55.t0 = _context55[\"catch\"](0);\n                        _context55.next = 13;\n                        return (_b = _this19.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                      case 13:\n                        _this19._debug('INITIAL_SESSION', 'callback id', id, 'error', _context55.t0);\n                        console.error(_context55.t0);\n                      case 15:\n                      case \"end\":\n                        return _context55.stop();\n                    }\n                  }, _callee55, null, [[0, 9]]);\n                }));\n                return function (_x34) {\n                  return _ref26.apply(this, arguments);\n                };\n              }());\n            case 2:\n              return _context56.abrupt(\"return\", _context56.sent);\n            case 3:\n            case \"end\":\n              return _context56.stop();\n          }\n        }, _callee56, this);\n      }));\n      function _emitInitialSession(_x33) {\n        return _emitInitialSession2.apply(this, arguments);\n      }\n      return _emitInitialSession;\n    }()\n    /**\n     * Sends a password reset request to an email address.\n     * This method supports the PKCE flow.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n  }, {\n    key: \"resetPasswordForEmail\",\n    value: function () {\n      var _resetPasswordForEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(email) {\n        var options,\n          codeChallenge,\n          codeChallengeMethod,\n          codeVerifier,\n          _args57 = arguments;\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) switch (_context57.prev = _context57.next) {\n            case 0:\n              options = _args57.length > 1 && _args57[1] !== undefined ? _args57[1] : {};\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context57.next = 11;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context57.next = 7;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 7:\n              _context57.next = 9;\n              return generatePKCEChallenge(codeVerifier);\n            case 9:\n              codeChallenge = _context57.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 11:\n              _context57.prev = 11;\n              _context57.next = 14;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/recover\"), {\n                body: {\n                  email: email,\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod,\n                  gotrue_meta_security: {\n                    captcha_token: options.captchaToken\n                  }\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo\n              });\n            case 14:\n              return _context57.abrupt(\"return\", _context57.sent);\n            case 17:\n              _context57.prev = 17;\n              _context57.t0 = _context57[\"catch\"](11);\n              if (!isAuthError(_context57.t0)) {\n                _context57.next = 21;\n                break;\n              }\n              return _context57.abrupt(\"return\", {\n                data: null,\n                error: _context57.t0\n              });\n            case 21:\n              throw _context57.t0;\n            case 22:\n            case \"end\":\n              return _context57.stop();\n          }\n        }, _callee57, this, [[11, 17]]);\n      }));\n      function resetPasswordForEmail(_x35) {\n        return _resetPasswordForEmail.apply(this, arguments);\n      }\n      return resetPasswordForEmail;\n    }()\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n  }, {\n    key: \"_refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(refreshToken) {\n        var _this20 = this;\n        var debugName, startedAt;\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) switch (_context59.prev = _context59.next) {\n            case 0:\n              debugName = \"#_refreshAccessToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n              this._debug(debugName, 'begin');\n              _context59.prev = 2;\n              startedAt = Date.now(); // will attempt to refresh the token with exponential backoff\n              _context59.next = 6;\n              return retryable( /*#__PURE__*/function () {\n                var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58(attempt) {\n                  return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n                    while (1) switch (_context58.prev = _context58.next) {\n                      case 0:\n                        _context58.next = 2;\n                        return sleep(attempt * 200);\n                      case 2:\n                        // 0, 200, 400, 800, ...\n                        _this20._debug(debugName, 'refreshing attempt', attempt);\n                        _context58.next = 5;\n                        return _request(_this20.fetch, 'POST', \"\".concat(_this20.url, \"/token?grant_type=refresh_token\"), {\n                          body: {\n                            refresh_token: refreshToken\n                          },\n                          headers: _this20.headers,\n                          xform: _sessionResponse\n                        });\n                      case 5:\n                        return _context58.abrupt(\"return\", _context58.sent);\n                      case 6:\n                      case \"end\":\n                        return _context58.stop();\n                    }\n                  }, _callee58);\n                }));\n                return function (_x37) {\n                  return _ref27.apply(this, arguments);\n                };\n              }(), function (attempt, _, result) {\n                return result && result.error && isAuthRetryableFetchError(result.error) &&\n                // retryable only if the request can be sent before the backoff overflows the tick duration\n                Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION;\n              });\n            case 6:\n              return _context59.abrupt(\"return\", _context59.sent);\n            case 9:\n              _context59.prev = 9;\n              _context59.t0 = _context59[\"catch\"](2);\n              this._debug(debugName, 'error', _context59.t0);\n              if (!isAuthError(_context59.t0)) {\n                _context59.next = 14;\n                break;\n              }\n              return _context59.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: _context59.t0\n              });\n            case 14:\n              throw _context59.t0;\n            case 15:\n              _context59.prev = 15;\n              this._debug(debugName, 'end');\n              return _context59.finish(15);\n            case 18:\n            case \"end\":\n              return _context59.stop();\n          }\n        }, _callee59, this, [[2, 9, 15, 18]]);\n      }));\n      function _refreshAccessToken(_x36) {\n        return _refreshAccessToken2.apply(this, arguments);\n      }\n      return _refreshAccessToken;\n    }()\n  }, {\n    key: \"_isValidSession\",\n    value: function _isValidSession(maybeSession) {\n      var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n  }, {\n    key: \"_handleProviderSignIn\",\n    value: function () {\n      var _handleProviderSignIn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(provider, options) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n          while (1) switch (_context60.prev = _context60.next) {\n            case 0:\n              _context60.next = 2;\n              return this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams\n              });\n            case 2:\n              url = _context60.sent;\n              this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n              // try to open on the browser\n              if (isBrowser() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n              }\n              return _context60.abrupt(\"return\", {\n                data: {\n                  provider: provider,\n                  url: url\n                },\n                error: null\n              });\n            case 6:\n            case \"end\":\n              return _context60.stop();\n          }\n        }, _callee60, this);\n      }));\n      function _handleProviderSignIn(_x38, _x39) {\n        return _handleProviderSignIn2.apply(this, arguments);\n      }\n      return _handleProviderSignIn;\n    }()\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n  }, {\n    key: \"_recoverAndRefresh\",\n    value: function () {\n      var _recoverAndRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {\n        var _a, debugName, currentSession, timeNow, expiresWithMargin, _yield$this$_callRefr3, error;\n        return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n          while (1) switch (_context61.prev = _context61.next) {\n            case 0:\n              debugName = '#_recoverAndRefresh()';\n              this._debug(debugName, 'begin');\n              _context61.prev = 2;\n              _context61.next = 5;\n              return getItemAsync(this.storage, this.storageKey);\n            case 5:\n              currentSession = _context61.sent;\n              this._debug(debugName, 'session from storage', currentSession);\n              if (this._isValidSession(currentSession)) {\n                _context61.next = 13;\n                break;\n              }\n              this._debug(debugName, 'session is not valid');\n              if (!(currentSession !== null)) {\n                _context61.next = 12;\n                break;\n              }\n              _context61.next = 12;\n              return this._removeSession();\n            case 12:\n              return _context61.abrupt(\"return\");\n            case 13:\n              timeNow = Math.round(Date.now() / 1000);\n              expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN;\n              this._debug(debugName, \"session has\".concat(expiresWithMargin ? '' : ' not', \" expired with margin of \").concat(EXPIRY_MARGIN, \"s\"));\n              if (!expiresWithMargin) {\n                _context61.next = 30;\n                break;\n              }\n              if (!(this.autoRefreshToken && currentSession.refresh_token)) {\n                _context61.next = 28;\n                break;\n              }\n              _context61.next = 20;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 20:\n              _yield$this$_callRefr3 = _context61.sent;\n              error = _yield$this$_callRefr3.error;\n              if (!error) {\n                _context61.next = 28;\n                break;\n              }\n              console.error(error);\n              if (isAuthRetryableFetchError(error)) {\n                _context61.next = 28;\n                break;\n              }\n              this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n              _context61.next = 28;\n              return this._removeSession();\n            case 28:\n              _context61.next = 32;\n              break;\n            case 30:\n              _context61.next = 32;\n              return this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            case 32:\n              _context61.next = 39;\n              break;\n            case 34:\n              _context61.prev = 34;\n              _context61.t0 = _context61[\"catch\"](2);\n              this._debug(debugName, 'error', _context61.t0);\n              console.error(_context61.t0);\n              return _context61.abrupt(\"return\");\n            case 39:\n              _context61.prev = 39;\n              this._debug(debugName, 'end');\n              return _context61.finish(39);\n            case 42:\n            case \"end\":\n              return _context61.stop();\n          }\n        }, _callee61, this, [[2, 34, 39, 42]]);\n      }));\n      function _recoverAndRefresh() {\n        return _recoverAndRefresh2.apply(this, arguments);\n      }\n      return _recoverAndRefresh;\n    }()\n  }, {\n    key: \"_callRefreshToken\",\n    value: function () {\n      var _callRefreshToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(refreshToken) {\n        var _a, _b, debugName, _yield$this$_refreshA, data, error, result, _result2;\n        return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n          while (1) switch (_context62.prev = _context62.next) {\n            case 0:\n              if (refreshToken) {\n                _context62.next = 2;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 2:\n              if (!this.refreshingDeferred) {\n                _context62.next = 4;\n                break;\n              }\n              return _context62.abrupt(\"return\", this.refreshingDeferred.promise);\n            case 4:\n              debugName = \"#_callRefreshToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n              this._debug(debugName, 'begin');\n              _context62.prev = 6;\n              this.refreshingDeferred = new Deferred();\n              _context62.next = 10;\n              return this._refreshAccessToken(refreshToken);\n            case 10:\n              _yield$this$_refreshA = _context62.sent;\n              data = _yield$this$_refreshA.data;\n              error = _yield$this$_refreshA.error;\n              if (!error) {\n                _context62.next = 15;\n                break;\n              }\n              throw error;\n            case 15:\n              if (data.session) {\n                _context62.next = 17;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 17:\n              _context62.next = 19;\n              return this._saveSession(data.session);\n            case 19:\n              _context62.next = 21;\n              return this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            case 21:\n              result = {\n                session: data.session,\n                error: null\n              };\n              this.refreshingDeferred.resolve(result);\n              return _context62.abrupt(\"return\", result);\n            case 26:\n              _context62.prev = 26;\n              _context62.t0 = _context62[\"catch\"](6);\n              this._debug(debugName, 'error', _context62.t0);\n              if (!isAuthError(_context62.t0)) {\n                _context62.next = 33;\n                break;\n              }\n              _result2 = {\n                session: null,\n                error: _context62.t0\n              };\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _context62.abrupt(\"return\", _result2);\n            case 33:\n              (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(_context62.t0);\n              throw _context62.t0;\n            case 35:\n              _context62.prev = 35;\n              this.refreshingDeferred = null;\n              this._debug(debugName, 'end');\n              return _context62.finish(35);\n            case 39:\n            case \"end\":\n              return _context62.stop();\n          }\n        }, _callee62, this, [[6, 26, 35, 39]]);\n      }));\n      function _callRefreshToken(_x40) {\n        return _callRefreshToken2.apply(this, arguments);\n      }\n      return _callRefreshToken;\n    }()\n  }, {\n    key: \"_notifyAllSubscribers\",\n    value: function () {\n      var _notifyAllSubscribers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64(event, session) {\n        var broadcast,\n          debugName,\n          errors,\n          promises,\n          i,\n          _args64 = arguments;\n        return _regeneratorRuntime().wrap(function _callee64$(_context64) {\n          while (1) switch (_context64.prev = _context64.next) {\n            case 0:\n              broadcast = _args64.length > 2 && _args64[2] !== undefined ? _args64[2] : true;\n              debugName = \"#_notifyAllSubscribers(\".concat(event, \")\");\n              this._debug(debugName, 'begin', session, \"broadcast = \".concat(broadcast));\n              _context64.prev = 3;\n              if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({\n                  event: event,\n                  session: session\n                });\n              }\n              errors = [];\n              promises = Array.from(this.stateChangeEmitters.values()).map( /*#__PURE__*/function () {\n                var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63(x) {\n                  return _regeneratorRuntime().wrap(function _callee63$(_context63) {\n                    while (1) switch (_context63.prev = _context63.next) {\n                      case 0:\n                        _context63.prev = 0;\n                        _context63.next = 3;\n                        return x.callback(event, session);\n                      case 3:\n                        _context63.next = 8;\n                        break;\n                      case 5:\n                        _context63.prev = 5;\n                        _context63.t0 = _context63[\"catch\"](0);\n                        errors.push(_context63.t0);\n                      case 8:\n                      case \"end\":\n                        return _context63.stop();\n                    }\n                  }, _callee63, null, [[0, 5]]);\n                }));\n                return function (_x43) {\n                  return _ref28.apply(this, arguments);\n                };\n              }());\n              _context64.next = 9;\n              return Promise.all(promises);\n            case 9:\n              if (!(errors.length > 0)) {\n                _context64.next = 12;\n                break;\n              }\n              for (i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            case 12:\n              _context64.prev = 12;\n              this._debug(debugName, 'end');\n              return _context64.finish(12);\n            case 15:\n            case \"end\":\n              return _context64.stop();\n          }\n        }, _callee64, this, [[3,, 12, 15]]);\n      }));\n      function _notifyAllSubscribers(_x41, _x42) {\n        return _notifyAllSubscribers2.apply(this, arguments);\n      }\n      return _notifyAllSubscribers;\n    }()\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n  }, {\n    key: \"_saveSession\",\n    value: function () {\n      var _saveSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(session) {\n        return _regeneratorRuntime().wrap(function _callee65$(_context65) {\n          while (1) switch (_context65.prev = _context65.next) {\n            case 0:\n              this._debug('#_saveSession()', session);\n              _context65.next = 3;\n              return this._persistSession(session);\n            case 3:\n            case \"end\":\n              return _context65.stop();\n          }\n        }, _callee65, this);\n      }));\n      function _saveSession(_x44) {\n        return _saveSession2.apply(this, arguments);\n      }\n      return _saveSession;\n    }()\n  }, {\n    key: \"_persistSession\",\n    value: function _persistSession(currentSession) {\n      this._debug('#_persistSession()', currentSession);\n      return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n  }, {\n    key: \"_removeSession\",\n    value: function () {\n      var _removeSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66() {\n        return _regeneratorRuntime().wrap(function _callee66$(_context66) {\n          while (1) switch (_context66.prev = _context66.next) {\n            case 0:\n              this._debug('#_removeSession()');\n              _context66.next = 3;\n              return removeItemAsync(this.storage, this.storageKey);\n            case 3:\n            case \"end\":\n              return _context66.stop();\n          }\n        }, _callee66, this);\n      }));\n      function _removeSession() {\n        return _removeSession2.apply(this, arguments);\n      }\n      return _removeSession;\n    }()\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n  }, {\n    key: \"_removeVisibilityChangedCallback\",\n    value: function _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      var callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n  }, {\n    key: \"_startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {\n        var _this21 = this;\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee68$(_context68) {\n          while (1) switch (_context68.prev = _context68.next) {\n            case 0:\n              _context68.next = 2;\n              return this._stopAutoRefresh();\n            case 2:\n              this._debug('#_startAutoRefresh()');\n              ticker = setInterval(function () {\n                return _this21._autoRefreshTokenTick();\n              }, AUTO_REFRESH_TICK_DURATION);\n              this.autoRefreshTicker = ticker;\n              if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n              } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n              }\n              // run the tick immediately, but in the next pass of the event loop so that\n              // #_initialize can be allowed to complete without recursively waiting on\n              // itself\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67() {\n                return _regeneratorRuntime().wrap(function _callee67$(_context67) {\n                  while (1) switch (_context67.prev = _context67.next) {\n                    case 0:\n                      _context67.next = 2;\n                      return _this21.initializePromise;\n                    case 2:\n                      _context67.next = 4;\n                      return _this21._autoRefreshTokenTick();\n                    case 4:\n                    case \"end\":\n                      return _context67.stop();\n                  }\n                }, _callee67);\n              })), 0);\n            case 7:\n            case \"end\":\n              return _context68.stop();\n          }\n        }, _callee68, this);\n      }));\n      function _startAutoRefresh() {\n        return _startAutoRefresh2.apply(this, arguments);\n      }\n      return _startAutoRefresh;\n    }()\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n  }, {\n    key: \"_stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69() {\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee69$(_context69) {\n          while (1) switch (_context69.prev = _context69.next) {\n            case 0:\n              this._debug('#_stopAutoRefresh()');\n              ticker = this.autoRefreshTicker;\n              this.autoRefreshTicker = null;\n              if (ticker) {\n                clearInterval(ticker);\n              }\n            case 4:\n            case \"end\":\n              return _context69.stop();\n          }\n        }, _callee69, this);\n      }));\n      function _stopAutoRefresh() {\n        return _stopAutoRefresh2.apply(this, arguments);\n      }\n      return _stopAutoRefresh;\n    }()\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n  }, {\n    key: \"startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70() {\n        return _regeneratorRuntime().wrap(function _callee70$(_context70) {\n          while (1) switch (_context70.prev = _context70.next) {\n            case 0:\n              this._removeVisibilityChangedCallback();\n              _context70.next = 3;\n              return this._startAutoRefresh();\n            case 3:\n            case \"end\":\n              return _context70.stop();\n          }\n        }, _callee70, this);\n      }));\n      function startAutoRefresh() {\n        return _startAutoRefresh3.apply(this, arguments);\n      }\n      return startAutoRefresh;\n    }()\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n  }, {\n    key: \"stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71() {\n        return _regeneratorRuntime().wrap(function _callee71$(_context71) {\n          while (1) switch (_context71.prev = _context71.next) {\n            case 0:\n              this._removeVisibilityChangedCallback();\n              _context71.next = 3;\n              return this._stopAutoRefresh();\n            case 3:\n            case \"end\":\n              return _context71.stop();\n          }\n        }, _callee71, this);\n      }));\n      function stopAutoRefresh() {\n        return _stopAutoRefresh3.apply(this, arguments);\n      }\n      return stopAutoRefresh;\n    }()\n    /**\n     * Runs the auto refresh token tick.\n     */\n  }, {\n    key: \"_autoRefreshTokenTick\",\n    value: function () {\n      var _autoRefreshTokenTick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee74() {\n        var _this22 = this;\n        return _regeneratorRuntime().wrap(function _callee74$(_context74) {\n          while (1) switch (_context74.prev = _context74.next) {\n            case 0:\n              this._debug('#_autoRefreshTokenTick()', 'begin');\n              _context74.prev = 1;\n              _context74.next = 4;\n              return this._acquireLock(0, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73() {\n                var now;\n                return _regeneratorRuntime().wrap(function _callee73$(_context73) {\n                  while (1) switch (_context73.prev = _context73.next) {\n                    case 0:\n                      _context73.prev = 0;\n                      now = Date.now();\n                      _context73.prev = 2;\n                      _context73.next = 5;\n                      return _this22._useSession( /*#__PURE__*/function () {\n                        var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72(result) {\n                          var session, expiresInTicks;\n                          return _regeneratorRuntime().wrap(function _callee72$(_context72) {\n                            while (1) switch (_context72.prev = _context72.next) {\n                              case 0:\n                                session = result.data.session;\n                                if (!(!session || !session.refresh_token || !session.expires_at)) {\n                                  _context72.next = 4;\n                                  break;\n                                }\n                                _this22._debug('#_autoRefreshTokenTick()', 'no session');\n                                return _context72.abrupt(\"return\");\n                              case 4:\n                                // session will expire in this many ticks (or has already expired if <= 0)\n                                expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                                _this22._debug('#_autoRefreshTokenTick()', \"access token expires in \".concat(expiresInTicks, \" ticks, a tick lasts \").concat(AUTO_REFRESH_TICK_DURATION, \"ms, refresh threshold is \").concat(AUTO_REFRESH_TICK_THRESHOLD, \" ticks\"));\n                                if (!(expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD)) {\n                                  _context72.next = 9;\n                                  break;\n                                }\n                                _context72.next = 9;\n                                return _this22._callRefreshToken(session.refresh_token);\n                              case 9:\n                              case \"end\":\n                                return _context72.stop();\n                            }\n                          }, _callee72);\n                        }));\n                        return function (_x45) {\n                          return _ref31.apply(this, arguments);\n                        };\n                      }());\n                    case 5:\n                      return _context73.abrupt(\"return\", _context73.sent);\n                    case 8:\n                      _context73.prev = 8;\n                      _context73.t0 = _context73[\"catch\"](2);\n                      console.error('Auto refresh tick failed with error. This is likely a transient error.', _context73.t0);\n                    case 11:\n                      _context73.prev = 11;\n                      _this22._debug('#_autoRefreshTokenTick()', 'end');\n                      return _context73.finish(11);\n                    case 14:\n                    case \"end\":\n                      return _context73.stop();\n                  }\n                }, _callee73, null, [[0,, 11, 14], [2, 8]]);\n              })));\n            case 4:\n              _context74.next = 13;\n              break;\n            case 6:\n              _context74.prev = 6;\n              _context74.t0 = _context74[\"catch\"](1);\n              if (!(_context74.t0.isAcquireTimeout || _context74.t0 instanceof LockAcquireTimeoutError)) {\n                _context74.next = 12;\n                break;\n              }\n              this._debug('auto refresh token tick lock not available');\n              _context74.next = 13;\n              break;\n            case 12:\n              throw _context74.t0;\n            case 13:\n            case \"end\":\n              return _context74.stop();\n          }\n        }, _callee74, this, [[1, 6]]);\n      }));\n      function _autoRefreshTokenTick() {\n        return _autoRefreshTokenTick2.apply(this, arguments);\n      }\n      return _autoRefreshTokenTick;\n    }()\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n  }, {\n    key: \"_handleVisibilityChange\",\n    value: function () {\n      var _handleVisibilityChange2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee76() {\n        var _this23 = this;\n        return _regeneratorRuntime().wrap(function _callee76$(_context76) {\n          while (1) switch (_context76.prev = _context76.next) {\n            case 0:\n              this._debug('#_handleVisibilityChange()');\n              if (!(!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener))) {\n                _context76.next = 4;\n                break;\n              }\n              if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n              }\n              return _context76.abrupt(\"return\", false);\n            case 4:\n              _context76.prev = 4;\n              this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee75() {\n                return _regeneratorRuntime().wrap(function _callee75$(_context75) {\n                  while (1) switch (_context75.prev = _context75.next) {\n                    case 0:\n                      _context75.next = 2;\n                      return _this23._onVisibilityChanged(false);\n                    case 2:\n                      return _context75.abrupt(\"return\", _context75.sent);\n                    case 3:\n                    case \"end\":\n                      return _context75.stop();\n                  }\n                }, _callee75);\n              }));\n              window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n              // now immediately call the visbility changed callback to setup with the\n              // current visbility state\n              _context76.next = 9;\n              return this._onVisibilityChanged(true);\n            case 9:\n              _context76.next = 14;\n              break;\n            case 11:\n              _context76.prev = 11;\n              _context76.t0 = _context76[\"catch\"](4);\n              console.error('_handleVisibilityChange', _context76.t0);\n            case 14:\n            case \"end\":\n              return _context76.stop();\n          }\n        }, _callee76, this, [[4, 11]]);\n      }));\n      function _handleVisibilityChange() {\n        return _handleVisibilityChange2.apply(this, arguments);\n      }\n      return _handleVisibilityChange;\n    }()\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n  }, {\n    key: \"_onVisibilityChanged\",\n    value: function () {\n      var _onVisibilityChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee78(calledFromInitialize) {\n        var _this24 = this;\n        var methodName;\n        return _regeneratorRuntime().wrap(function _callee78$(_context78) {\n          while (1) switch (_context78.prev = _context78.next) {\n            case 0:\n              methodName = \"#_onVisibilityChanged(\".concat(calledFromInitialize, \")\");\n              this._debug(methodName, 'visibilityState', document.visibilityState);\n              if (!(document.visibilityState === 'visible')) {\n                _context78.next = 11;\n                break;\n              }\n              if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n              }\n              if (calledFromInitialize) {\n                _context78.next = 9;\n                break;\n              }\n              _context78.next = 7;\n              return this.initializePromise;\n            case 7:\n              _context78.next = 9;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee77() {\n                return _regeneratorRuntime().wrap(function _callee77$(_context77) {\n                  while (1) switch (_context77.prev = _context77.next) {\n                    case 0:\n                      if (!(document.visibilityState !== 'visible')) {\n                        _context77.next = 3;\n                        break;\n                      }\n                      _this24._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                      // visibility has changed while waiting for the lock, abort\n                      return _context77.abrupt(\"return\");\n                    case 3:\n                      _context77.next = 5;\n                      return _this24._recoverAndRefresh();\n                    case 5:\n                    case \"end\":\n                      return _context77.stop();\n                  }\n                }, _callee77);\n              })));\n            case 9:\n              _context78.next = 12;\n              break;\n            case 11:\n              if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                  this._stopAutoRefresh();\n                }\n              }\n            case 12:\n            case \"end\":\n              return _context78.stop();\n          }\n        }, _callee78, this);\n      }));\n      function _onVisibilityChanged(_x46) {\n        return _onVisibilityChanged2.apply(this, arguments);\n      }\n      return _onVisibilityChanged;\n    }()\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n  }, {\n    key: \"_getUrlForProvider\",\n    value: function () {\n      var _getUrlForProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee79(provider, options) {\n        var urlParams, codeVerifier, codeChallenge, codeChallengeMethod, flowParams, query;\n        return _regeneratorRuntime().wrap(function _callee79$(_context79) {\n          while (1) switch (_context79.prev = _context79.next) {\n            case 0:\n              urlParams = [\"provider=\".concat(encodeURIComponent(provider))];\n              if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(\"redirect_to=\".concat(encodeURIComponent(options.redirectTo)));\n              }\n              if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(\"scopes=\".concat(encodeURIComponent(options.scopes)));\n              }\n              if (!(this.flowType === 'pkce')) {\n                _context79.next = 14;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context79.next = 7;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 7:\n              _context79.next = 9;\n              return generatePKCEChallenge(codeVerifier);\n            case 9:\n              codeChallenge = _context79.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n              this._debug('PKCE', 'code verifier', \"\".concat(codeVerifier.substring(0, 5), \"...\"), 'code challenge', codeChallenge, 'method', codeChallengeMethod);\n              flowParams = new URLSearchParams({\n                code_challenge: \"\".concat(encodeURIComponent(codeChallenge)),\n                code_challenge_method: \"\".concat(encodeURIComponent(codeChallengeMethod))\n              });\n              urlParams.push(flowParams.toString());\n            case 14:\n              if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n              }\n              return _context79.abrupt(\"return\", \"\".concat(this.url, \"/authorize?\").concat(urlParams.join('&')));\n            case 16:\n            case \"end\":\n              return _context79.stop();\n          }\n        }, _callee79, this);\n      }));\n      function _getUrlForProvider(_x47, _x48) {\n        return _getUrlForProvider2.apply(this, arguments);\n      }\n      return _getUrlForProvider;\n    }()\n  }, {\n    key: \"_unenroll\",\n    value: function () {\n      var _unenroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee81(params) {\n        var _this25 = this;\n        return _regeneratorRuntime().wrap(function _callee81$(_context81) {\n          while (1) switch (_context81.prev = _context81.next) {\n            case 0:\n              _context81.prev = 0;\n              _context81.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee80(result) {\n                  var _a, sessionData, sessionError;\n                  return _regeneratorRuntime().wrap(function _callee80$(_context80) {\n                    while (1) switch (_context80.prev = _context80.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context80.next = 3;\n                          break;\n                        }\n                        return _context80.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context80.next = 5;\n                        return _request(_this25.fetch, 'DELETE', \"\".concat(_this25.url, \"/factors/\").concat(params.factorId), {\n                          headers: _this25.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        return _context80.abrupt(\"return\", _context80.sent);\n                      case 6:\n                      case \"end\":\n                        return _context80.stop();\n                    }\n                  }, _callee80);\n                }));\n                return function (_x50) {\n                  return _ref34.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context81.abrupt(\"return\", _context81.sent);\n            case 6:\n              _context81.prev = 6;\n              _context81.t0 = _context81[\"catch\"](0);\n              if (!isAuthError(_context81.t0)) {\n                _context81.next = 10;\n                break;\n              }\n              return _context81.abrupt(\"return\", {\n                data: null,\n                error: _context81.t0\n              });\n            case 10:\n              throw _context81.t0;\n            case 11:\n            case \"end\":\n              return _context81.stop();\n          }\n        }, _callee81, this, [[0, 6]]);\n      }));\n      function _unenroll(_x49) {\n        return _unenroll2.apply(this, arguments);\n      }\n      return _unenroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n  }, {\n    key: \"_enroll\",\n    value: function () {\n      var _enroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee83(params) {\n        var _this26 = this;\n        return _regeneratorRuntime().wrap(function _callee83$(_context83) {\n          while (1) switch (_context83.prev = _context83.next) {\n            case 0:\n              _context83.prev = 0;\n              _context83.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee82(result) {\n                  var _a, _b, sessionData, sessionError, _yield$_request9, data, error;\n                  return _regeneratorRuntime().wrap(function _callee82$(_context82) {\n                    while (1) switch (_context82.prev = _context82.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context82.next = 3;\n                          break;\n                        }\n                        return _context82.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context82.next = 5;\n                        return _request(_this26.fetch, 'POST', \"\".concat(_this26.url, \"/factors\"), {\n                          body: {\n                            friendly_name: params.friendlyName,\n                            factor_type: params.factorType,\n                            issuer: params.issuer\n                          },\n                          headers: _this26.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        _yield$_request9 = _context82.sent;\n                        data = _yield$_request9.data;\n                        error = _yield$_request9.error;\n                        if (!error) {\n                          _context82.next = 10;\n                          break;\n                        }\n                        return _context82.abrupt(\"return\", {\n                          data: null,\n                          error: error\n                        });\n                      case 10:\n                        if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                          data.totp.qr_code = \"data:image/svg+xml;utf-8,\".concat(data.totp.qr_code);\n                        }\n                        return _context82.abrupt(\"return\", {\n                          data: data,\n                          error: null\n                        });\n                      case 12:\n                      case \"end\":\n                        return _context82.stop();\n                    }\n                  }, _callee82);\n                }));\n                return function (_x52) {\n                  return _ref35.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context83.abrupt(\"return\", _context83.sent);\n            case 6:\n              _context83.prev = 6;\n              _context83.t0 = _context83[\"catch\"](0);\n              if (!isAuthError(_context83.t0)) {\n                _context83.next = 10;\n                break;\n              }\n              return _context83.abrupt(\"return\", {\n                data: null,\n                error: _context83.t0\n              });\n            case 10:\n              throw _context83.t0;\n            case 11:\n            case \"end\":\n              return _context83.stop();\n          }\n        }, _callee83, this, [[0, 6]]);\n      }));\n      function _enroll(_x51) {\n        return _enroll2.apply(this, arguments);\n      }\n      return _enroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n  }, {\n    key: \"_verify\",\n    value: function () {\n      var _verify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee86(params) {\n        var _this27 = this;\n        return _regeneratorRuntime().wrap(function _callee86$(_context86) {\n          while (1) switch (_context86.prev = _context86.next) {\n            case 0:\n              return _context86.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee85() {\n                return _regeneratorRuntime().wrap(function _callee85$(_context85) {\n                  while (1) switch (_context85.prev = _context85.next) {\n                    case 0:\n                      _context85.prev = 0;\n                      _context85.next = 3;\n                      return _this27._useSession( /*#__PURE__*/function () {\n                        var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee84(result) {\n                          var _a, sessionData, sessionError, _yield$_request10, data, error;\n                          return _regeneratorRuntime().wrap(function _callee84$(_context84) {\n                            while (1) switch (_context84.prev = _context84.next) {\n                              case 0:\n                                sessionData = result.data, sessionError = result.error;\n                                if (!sessionError) {\n                                  _context84.next = 3;\n                                  break;\n                                }\n                                return _context84.abrupt(\"return\", {\n                                  data: null,\n                                  error: sessionError\n                                });\n                              case 3:\n                                _context84.next = 5;\n                                return _request(_this27.fetch, 'POST', \"\".concat(_this27.url, \"/factors/\").concat(params.factorId, \"/verify\"), {\n                                  body: {\n                                    code: params.code,\n                                    challenge_id: params.challengeId\n                                  },\n                                  headers: _this27.headers,\n                                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                                });\n                              case 5:\n                                _yield$_request10 = _context84.sent;\n                                data = _yield$_request10.data;\n                                error = _yield$_request10.error;\n                                if (!error) {\n                                  _context84.next = 10;\n                                  break;\n                                }\n                                return _context84.abrupt(\"return\", {\n                                  data: null,\n                                  error: error\n                                });\n                              case 10:\n                                _context84.next = 12;\n                                return _this27._saveSession(Object.assign({\n                                  expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                                }, data));\n                              case 12:\n                                _context84.next = 14;\n                                return _this27._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                              case 14:\n                                return _context84.abrupt(\"return\", {\n                                  data: data,\n                                  error: error\n                                });\n                              case 15:\n                              case \"end\":\n                                return _context84.stop();\n                            }\n                          }, _callee84);\n                        }));\n                        return function (_x54) {\n                          return _ref37.apply(this, arguments);\n                        };\n                      }());\n                    case 3:\n                      return _context85.abrupt(\"return\", _context85.sent);\n                    case 6:\n                      _context85.prev = 6;\n                      _context85.t0 = _context85[\"catch\"](0);\n                      if (!isAuthError(_context85.t0)) {\n                        _context85.next = 10;\n                        break;\n                      }\n                      return _context85.abrupt(\"return\", {\n                        data: null,\n                        error: _context85.t0\n                      });\n                    case 10:\n                      throw _context85.t0;\n                    case 11:\n                    case \"end\":\n                      return _context85.stop();\n                  }\n                }, _callee85, null, [[0, 6]]);\n              }))));\n            case 1:\n            case \"end\":\n              return _context86.stop();\n          }\n        }, _callee86, this);\n      }));\n      function _verify(_x53) {\n        return _verify2.apply(this, arguments);\n      }\n      return _verify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n  }, {\n    key: \"_challenge\",\n    value: function () {\n      var _challenge2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee89(params) {\n        var _this28 = this;\n        return _regeneratorRuntime().wrap(function _callee89$(_context89) {\n          while (1) switch (_context89.prev = _context89.next) {\n            case 0:\n              return _context89.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee88() {\n                return _regeneratorRuntime().wrap(function _callee88$(_context88) {\n                  while (1) switch (_context88.prev = _context88.next) {\n                    case 0:\n                      _context88.prev = 0;\n                      _context88.next = 3;\n                      return _this28._useSession( /*#__PURE__*/function () {\n                        var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee87(result) {\n                          var _a, sessionData, sessionError;\n                          return _regeneratorRuntime().wrap(function _callee87$(_context87) {\n                            while (1) switch (_context87.prev = _context87.next) {\n                              case 0:\n                                sessionData = result.data, sessionError = result.error;\n                                if (!sessionError) {\n                                  _context87.next = 3;\n                                  break;\n                                }\n                                return _context87.abrupt(\"return\", {\n                                  data: null,\n                                  error: sessionError\n                                });\n                              case 3:\n                                _context87.next = 5;\n                                return _request(_this28.fetch, 'POST', \"\".concat(_this28.url, \"/factors/\").concat(params.factorId, \"/challenge\"), {\n                                  headers: _this28.headers,\n                                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                                });\n                              case 5:\n                                return _context87.abrupt(\"return\", _context87.sent);\n                              case 6:\n                              case \"end\":\n                                return _context87.stop();\n                            }\n                          }, _callee87);\n                        }));\n                        return function (_x56) {\n                          return _ref39.apply(this, arguments);\n                        };\n                      }());\n                    case 3:\n                      return _context88.abrupt(\"return\", _context88.sent);\n                    case 6:\n                      _context88.prev = 6;\n                      _context88.t0 = _context88[\"catch\"](0);\n                      if (!isAuthError(_context88.t0)) {\n                        _context88.next = 10;\n                        break;\n                      }\n                      return _context88.abrupt(\"return\", {\n                        data: null,\n                        error: _context88.t0\n                      });\n                    case 10:\n                      throw _context88.t0;\n                    case 11:\n                    case \"end\":\n                      return _context88.stop();\n                  }\n                }, _callee88, null, [[0, 6]]);\n              }))));\n            case 1:\n            case \"end\":\n              return _context89.stop();\n          }\n        }, _callee89, this);\n      }));\n      function _challenge(_x55) {\n        return _challenge2.apply(this, arguments);\n      }\n      return _challenge;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n  }, {\n    key: \"_challengeAndVerify\",\n    value: function () {\n      var _challengeAndVerify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee90(params) {\n        var _yield$this$_challeng, challengeData, challengeError;\n        return _regeneratorRuntime().wrap(function _callee90$(_context90) {\n          while (1) switch (_context90.prev = _context90.next) {\n            case 0:\n              _context90.next = 2;\n              return this._challenge({\n                factorId: params.factorId\n              });\n            case 2:\n              _yield$this$_challeng = _context90.sent;\n              challengeData = _yield$this$_challeng.data;\n              challengeError = _yield$this$_challeng.error;\n              if (!challengeError) {\n                _context90.next = 7;\n                break;\n              }\n              return _context90.abrupt(\"return\", {\n                data: null,\n                error: challengeError\n              });\n            case 7:\n              _context90.next = 9;\n              return this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code\n              });\n            case 9:\n              return _context90.abrupt(\"return\", _context90.sent);\n            case 10:\n            case \"end\":\n              return _context90.stop();\n          }\n        }, _callee90, this);\n      }));\n      function _challengeAndVerify(_x57) {\n        return _challengeAndVerify2.apply(this, arguments);\n      }\n      return _challengeAndVerify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n  }, {\n    key: \"_listFactors\",\n    value: function () {\n      var _listFactors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee91() {\n        var _yield$this$getUser, user, userError, factors, totp;\n        return _regeneratorRuntime().wrap(function _callee91$(_context91) {\n          while (1) switch (_context91.prev = _context91.next) {\n            case 0:\n              _context91.next = 2;\n              return this.getUser();\n            case 2:\n              _yield$this$getUser = _context91.sent;\n              user = _yield$this$getUser.data.user;\n              userError = _yield$this$getUser.error;\n              if (!userError) {\n                _context91.next = 7;\n                break;\n              }\n              return _context91.abrupt(\"return\", {\n                data: null,\n                error: userError\n              });\n            case 7:\n              factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n              totp = factors.filter(function (factor) {\n                return factor.factor_type === 'totp' && factor.status === 'verified';\n              });\n              return _context91.abrupt(\"return\", {\n                data: {\n                  all: factors,\n                  totp: totp\n                },\n                error: null\n              });\n            case 10:\n            case \"end\":\n              return _context91.stop();\n          }\n        }, _callee91, this);\n      }));\n      function _listFactors() {\n        return _listFactors2.apply(this, arguments);\n      }\n      return _listFactors;\n    }()\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n  }, {\n    key: \"_getAuthenticatorAssuranceLevel\",\n    value: function () {\n      var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee94() {\n        var _this29 = this;\n        return _regeneratorRuntime().wrap(function _callee94$(_context94) {\n          while (1) switch (_context94.prev = _context94.next) {\n            case 0:\n              return _context94.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee93() {\n                return _regeneratorRuntime().wrap(function _callee93$(_context93) {\n                  while (1) switch (_context93.prev = _context93.next) {\n                    case 0:\n                      _context93.next = 2;\n                      return _this29._useSession( /*#__PURE__*/function () {\n                        var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee92(result) {\n                          var _a, _b, session, sessionError, payload, currentLevel, nextLevel, verifiedFactors, currentAuthenticationMethods;\n                          return _regeneratorRuntime().wrap(function _callee92$(_context92) {\n                            while (1) switch (_context92.prev = _context92.next) {\n                              case 0:\n                                session = result.data.session, sessionError = result.error;\n                                if (!sessionError) {\n                                  _context92.next = 3;\n                                  break;\n                                }\n                                return _context92.abrupt(\"return\", {\n                                  data: null,\n                                  error: sessionError\n                                });\n                              case 3:\n                                if (session) {\n                                  _context92.next = 5;\n                                  break;\n                                }\n                                return _context92.abrupt(\"return\", {\n                                  data: {\n                                    currentLevel: null,\n                                    nextLevel: null,\n                                    currentAuthenticationMethods: []\n                                  },\n                                  error: null\n                                });\n                              case 5:\n                                payload = _this29._decodeJWT(session.access_token);\n                                currentLevel = null;\n                                if (payload.aal) {\n                                  currentLevel = payload.aal;\n                                }\n                                nextLevel = currentLevel;\n                                verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(function (factor) {\n                                  return factor.status === 'verified';\n                                })) !== null && _b !== void 0 ? _b : [];\n                                if (verifiedFactors.length > 0) {\n                                  nextLevel = 'aal2';\n                                }\n                                currentAuthenticationMethods = payload.amr || [];\n                                return _context92.abrupt(\"return\", {\n                                  data: {\n                                    currentLevel: currentLevel,\n                                    nextLevel: nextLevel,\n                                    currentAuthenticationMethods: currentAuthenticationMethods\n                                  },\n                                  error: null\n                                });\n                              case 13:\n                              case \"end\":\n                                return _context92.stop();\n                            }\n                          }, _callee92);\n                        }));\n                        return function (_x58) {\n                          return _ref41.apply(this, arguments);\n                        };\n                      }());\n                    case 2:\n                      return _context93.abrupt(\"return\", _context93.sent);\n                    case 3:\n                    case \"end\":\n                      return _context93.stop();\n                  }\n                }, _callee93);\n              }))));\n            case 1:\n            case \"end\":\n              return _context94.stop();\n          }\n        }, _callee94, this);\n      }));\n      function _getAuthenticatorAssuranceLevel() {\n        return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n      }\n      return _getAuthenticatorAssuranceLevel;\n    }()\n  }]);\n  return GoTrueClient;\n}();\nexport { GoTrueClient as default };\nGoTrueClient.nextInstanceID = 0;","map":{"version":3,"names":["GoTrueAdminApi","DEFAULT_HEADERS","EXPIRY_MARGIN","GOTRUE_URL","STORAGE_KEY","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthInvalidCredentialsError","AuthSessionMissingError","AuthInvalidTokenResponseError","AuthUnknownError","isAuthApiError","isAuthError","isAuthRetryableFetchError","_request","_sessionResponse","_userResponse","_ssoResponse","decodeJWTPayload","Deferred","getItemAsync","isBrowser","removeItemAsync","resolveFetch","setItemAsync","uuid","retryable","sleep","generatePKCEVerifier","generatePKCEChallenge","supportsLocalStorage","parseParametersFromURL","localStorageAdapter","memoryLocalStorageAdapter","polyfillGlobalThis","version","LockAcquireTimeoutError","DEFAULT_OPTIONS","url","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","headers","flowType","debug","AUTO_REFRESH_TICK_DURATION","AUTO_REFRESH_TICK_THRESHOLD","lockNoOp","_x","_x2","_x3","_lockNoOp","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee95","name","acquireTimeout","fn","wrap","_callee95$","_context95","prev","next","abrupt","sent","stop","GoTrueClient","options","_this","_classCallCheck","memoryStorage","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","lockAcquired","pendingInLock","broadcastChannel","logger","console","log","instanceID","nextInstanceID","warn","settings","Object","assign","logDebugMessages","admin","fetch","lock","mfa","verify","_verify","bind","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","listFactors","_listFactors","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","storage","globalThis","BroadcastChannel","e","error","_a","addEventListener","_ref","_callee","event","_callee$","_context","_debug","_notifyAllSubscribers","data","session","_x4","initialize","_createClass","key","value","_len","length","args","Array","_key","concat","Date","toISOString","_initialize2","_callee4","_this2","_callee4$","_context4","_callee3","_callee3$","_context3","_acquireLock","_callee2","_callee2$","_context2","_initialize","_initialize3","_callee6","_this3","isPKCEFlow","_yield$this$_getSessi","redirectType","_callee6$","_context6","_isPKCEFlow","t0","_isImplicitGrantFlow","_getSessionFromURL","_removeSession","_saveSession","setTimeout","_callee5","_callee5$","_context5","_recoverAndRefresh","t1","_handleVisibilityChange","finish","_signUp","_callee7","credentials","_b","_c","res","email","password","codeChallenge","codeChallengeMethod","codeVerifier","phone","_password","_options","_res","user","_callee7$","_context7","redirectTo","emailRedirectTo","body","gotrue_meta_security","captcha_token","captchaToken","code_challenge","code_challenge_method","xform","channel","signUp","_x5","_signInWithPassword","_callee8","_password2","_options2","_res2","_callee8$","_context8","signInWithPassword","_x6","_signInWithOAuth","_callee9","_d","_callee9$","_context9","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","signInWithOAuth","_x7","_exchangeCodeForSession2","_callee11","authCode","_this4","_callee11$","_context11","_callee10","_callee10$","_context10","_exchangeCodeForSession","exchangeCodeForSession","_x8","_exchangeCodeForSession3","_callee12","_yield$_request","_callee12$","_context12","auth_code","code_verifier","_x9","_signInWithIdToken","_callee13","token","access_token","nonce","_callee13$","_context13","id_token","signInWithIdToken","_x10","_signInWithOtp","_callee14","_e","_yield$_request2","_options3","_yield$_request3","_error","_callee14$","_context14","create_user","shouldCreateUser","messageId","message_id","signInWithOtp","_x11","_verifyOtp","_callee15","params","_yield$_request4","_callee15$","_context15","type","undefined","Error","verifyOtp","_x12","_signInWithSSO","_callee16","_callee16$","_context16","provider_id","providerId","domain","redirect_to","skip_http_redirect","signInWithSSO","_x13","_reauthenticate2","_callee18","_this5","_callee18$","_context18","_callee17","_callee17$","_context17","_reauthenticate","reauthenticate","_reauthenticate3","_callee20","_this6","_callee20$","_context20","_useSession","_ref7","_callee19","result","sessionError","_yield$_request5","_callee19$","_context19","jwt","_x14","_resend","_callee21","endpoint","_yield$_request6","_type","_options4","_yield$_request7","_error2","_callee21$","_context21","resend","_x15","_getSession","_callee24","_this7","_callee24$","_context24","_callee23","_callee23$","_context23","_ref9","_callee22","_callee22$","_context22","_x16","getSession","_acquireLock2","_callee29","_this8","last","_callee29$","_context29","Promise","resolve","_callee25","_callee25$","_context25","push","_callee26","_callee26$","_context26","_callee28","_result","waitOn","_callee28$","_context28","_callee27","_callee27$","_context27","_toConsumableArray","all","splice","_x17","_x18","_useSession2","_callee30","_callee30$","_context30","__loadSession","_x19","_loadSession","_callee31","currentSession","maybeSession","hasExpired","_yield$this$_callRefr","_callee31$","_context31","stack","_isValidSession","expires_at","now","_callRefreshToken","refresh_token","_getUser2","_callee33","_this9","_callee33$","_context33","_getUser","_callee32","_callee32$","_context32","getUser","_x20","_getUser3","_callee35","_this10","_callee35$","_context35","_ref15","_callee34","_callee34$","_context34","_x22","_x21","_updateUser2","_callee37","attributes","_this11","_args37","_callee37$","_context37","_callee36","_callee36$","_context36","_updateUser","updateUser","_x23","_updateUser3","_callee39","_this12","_args39","_callee39$","_context39","_ref17","_callee38","sessionData","_yield$_request8","userError","_callee38$","_context38","_x25","_x24","_decodeJWT","_setSession2","_callee41","_this13","_callee41$","_context41","_callee40","_callee40$","_context40","_setSession","setSession","_x26","_setSession3","_callee42","timeNow","expiresAt","payload","_yield$this$_callRefr2","refreshedSession","_yield$this$_getUser","_error3","_callee42$","_context42","exp","token_type","expires_in","_x27","_refreshSession2","_callee44","_this14","_callee44$","_context44","_callee43","_callee43$","_context43","_refreshSession","refreshSession","_x28","_refreshSession3","_callee46","_this15","_callee46$","_context46","_ref20","_callee45","_error4","_yield$_this15$_callR","_callee45$","_context45","_x30","_x29","_getSessionFromURL2","_callee47","_yield$this$_exchange","_data","_error5","provider_token","provider_refresh_token","expiresIn","actuallyExpiresIn","issuedAt","_yield$this$_getUser2","_callee47$","_context47","window","location","href","code","URL","searchParams","delete","history","replaceState","state","toString","error_description","error_code","Math","round","parseInt","hash","_x31","_isPKCEFlow2","_callee48","currentStorageContent","_callee48$","_context48","_signOut2","_callee50","_this16","_args50","_callee50$","_context50","scope","_callee49","_callee49$","_context49","_signOut","signOut","_signOut3","_callee52","_this17","_ref22","_args52","_callee52$","_context52","_ref23","_callee51","accessToken","_yield$_this17$admin$","_callee51$","_context51","status","_x32","onAuthStateChange","callback","_this18","id","subscription","unsubscribe","set","_callee54","_callee54$","_context54","_callee53","_callee53$","_context53","_emitInitialSession","_emitInitialSession2","_callee56","_this19","_callee56$","_context56","_ref26","_callee55","_callee55$","_context55","get","_x34","_x33","_resetPasswordForEmail","_callee57","_args57","_callee57$","_context57","resetPasswordForEmail","_x35","_refreshAccessToken2","_callee59","refreshToken","_this20","debugName","startedAt","_callee59$","_context59","substring","_ref27","_callee58","attempt","_callee58$","_context58","_x37","_","_refreshAccessToken","_x36","isValidSession","_handleProviderSignIn2","_callee60","_callee60$","_context60","_getUrlForProvider","_x38","_x39","_recoverAndRefresh2","_callee61","expiresWithMargin","_yield$this$_callRefr3","_callee61$","_context61","Infinity","_callRefreshToken2","_callee62","_yield$this$_refreshA","_result2","_callee62$","_context62","promise","reject","_x40","_notifyAllSubscribers2","_callee64","broadcast","errors","promises","i","_args64","_callee64$","_context64","postMessage","from","values","map","_ref28","_callee63","x","_callee63$","_context63","_x43","_x41","_x42","_saveSession2","_callee65","_callee65$","_context65","_persistSession","_x44","_removeSession2","_callee66","_callee66$","_context66","_removeVisibilityChangedCallback","removeEventListener","_startAutoRefresh2","_callee68","_this21","ticker","_callee68$","_context68","_stopAutoRefresh","setInterval","_autoRefreshTokenTick","unref","Deno","unrefTimer","_callee67","_callee67$","_context67","_startAutoRefresh","_stopAutoRefresh2","_callee69","_callee69$","_context69","clearInterval","_startAutoRefresh3","_callee70","_callee70$","_context70","startAutoRefresh","_stopAutoRefresh3","_callee71","_callee71$","_context71","stopAutoRefresh","_autoRefreshTokenTick2","_callee74","_this22","_callee74$","_context74","_callee73","_callee73$","_context73","_ref31","_callee72","expiresInTicks","_callee72$","_context72","floor","_x45","isAcquireTimeout","_handleVisibilityChange2","_callee76","_this23","_callee76$","_context76","_callee75","_callee75$","_context75","_onVisibilityChanged","_onVisibilityChanged2","_callee78","calledFromInitialize","_this24","methodName","_callee78$","_context78","document","visibilityState","_callee77","_callee77$","_context77","_x46","_getUrlForProvider2","_callee79","urlParams","flowParams","query","_callee79$","_context79","encodeURIComponent","URLSearchParams","join","_x47","_x48","_unenroll2","_callee81","_this25","_callee81$","_context81","_ref34","_callee80","_callee80$","_context80","factorId","_x50","_x49","_enroll2","_callee83","_this26","_callee83$","_context83","_ref35","_callee82","_yield$_request9","_callee82$","_context82","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","_x52","_x51","_verify2","_callee86","_this27","_callee86$","_context86","_callee85","_callee85$","_context85","_ref37","_callee84","_yield$_request10","_callee84$","_context84","challenge_id","challengeId","_x54","_x53","_challenge2","_callee89","_this28","_callee89$","_context89","_callee88","_callee88$","_context88","_ref39","_callee87","_callee87$","_context87","_x56","_x55","_challengeAndVerify2","_callee90","_yield$this$_challeng","challengeData","challengeError","_callee90$","_context90","_x57","_listFactors2","_callee91","_yield$this$getUser","factors","_callee91$","_context91","filter","factor","_getAuthenticatorAssuranceLevel2","_callee94","_this29","_callee94$","_context94","_callee93","_callee93$","_context93","_ref41","_callee92","currentLevel","nextLevel","verifiedFactors","currentAuthenticationMethods","_callee92$","_context92","aal","amr","_x58","default"],"sources":["/Users/alexandraladyzhensky/Desktop/Udemy/Programming/today-i-learned/node_modules/@supabase/gotrue-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthInvalidCredentialsError,\n  AuthRetryableFetchError,\n  AuthSessionMissingError,\n  AuthInvalidTokenResponseError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n  isAuthRetryableFetchError,\n} from './lib/errors'\nimport { Fetch, _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n  generatePKCEVerifier,\n  generatePKCEChallenge,\n  supportsLocalStorage,\n  parseParametersFromURL,\n} from './lib/helpers'\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { version } from './lib/version'\nimport { LockAcquireTimeoutError } from './lib/locks'\n\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  AuthTokenResponse,\n  AuthOtpResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  SignOut,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n  ResendParams,\n  AuthFlowType,\n  LockFunc,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage' | 'lock'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nasync function lockNoOp<R>(name: string, acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n  return await fn()\n}\n\nexport default class GoTrueClient {\n  private static nextInstanceID = 0\n\n  private instanceID: number\n\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  protected flowType: AuthFlowType\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected memoryStorage: { [key: string]: string } | null = null\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n  protected lock: LockFunc\n  protected lockAcquired = false\n  protected pendingInLock: Promise<any>[] = []\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  protected logDebugMessages: boolean\n  protected logger: (message: string, ...args: any[]) => void = console.log\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    this.instanceID = GoTrueClient.nextInstanceID\n    GoTrueClient.nextInstanceID += 1\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn(\n        'Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.'\n      )\n    }\n\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.logDebugMessages = !!settings.debug\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug\n    }\n\n    this.persistSession = settings.persistSession\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.lock = settings.lock || lockNoOp\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = localStorageAdapter\n        } else {\n          this.memoryStorage = {}\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n        }\n      }\n    } else {\n      this.memoryStorage = {}\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', async (event) => {\n        this._debug('received broadcast notification from other tab or client', event)\n\n        await this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  private _debug(...args: any[]): GoTrueClient {\n    if (this.logDebugMessages) {\n      this.logger(\n        `GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`,\n        ...args\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  async initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return await this.initializePromise\n    }\n\n    this.initializePromise = (async () => {\n      return await this._acquireLock(-1, async () => {\n        return await this._initialize()\n      })\n    })()\n\n    return await this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    try {\n      const isPKCEFlow = isBrowser() ? await this._isPKCEFlow() : false\n      this._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow)\n\n      if (isPKCEFlow || (this.detectSessionInUrl && this._isImplicitGrantFlow())) {\n        const { data, error } = await this._getSessionFromURL(isPKCEFlow)\n        if (error) {\n          this._debug('#_initialize()', 'error detecting session from URL', error)\n\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        this._debug(\n          '#_initialize()',\n          'detected session in URL',\n          session,\n          'redirect type',\n          redirectType\n        )\n\n        await this._saveSession(session)\n\n        setTimeout(async () => {\n          if (redirectType === 'recovery') {\n            await this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n          } else {\n            await this._notifyAllSubscribers('SIGNED_IN', session)\n          }\n        }, 0)\n\n        return { error: null }\n      }\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n      this._debug('#_initialize()', 'end')\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(credentials: SignInWithPasswordCredentials): Promise<AuthTokenResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { user: data.user, session: data.session }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   * This method supports the PKCE flow.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    await this._removeSession()\n\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return this._exchangeCodeForSession(authCode)\n    })\n  }\n\n  private async _exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    const codeVerifier = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const { data, error } = await _request(\n      this.fetch,\n      'POST',\n      `${this.url}/token?grant_type=pkce`,\n      {\n        headers: this.headers,\n        body: {\n          auth_code: authCode,\n          code_verifier: codeVerifier,\n        },\n        xform: _sessionResponse,\n      }\n    )\n    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    if (error) {\n      return { data: { user: null, session: null }, error }\n    } else if (!data || !data.session || !data.user) {\n      return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n    }\n    if (data.session) {\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('SIGNED_IN', data.session)\n    }\n    return { data, error }\n  }\n\n  /**\n   * Allows signing in with an OIDC ID token. The authentication provider used\n   * should be enabled and configured.\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse> {\n    await this._removeSession()\n\n    try {\n      const { options, provider, token, access_token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          access_token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   * This method supports PKCE when an email is passed.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthOtpResponse> {\n    try {\n      await this._removeSession()\n\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      if (params.type !== 'email_change' && params.type !== 'phone_change') {\n        // we don't want to remove the authenticated session if the user is performing an email_change or phone_change verification\n        await this._removeSession()\n      }\n\n      let redirectTo = undefined\n      let captchaToken = undefined\n      if ('options' in params) {\n        redirectTo = params.options?.redirectTo\n        captchaToken = params.options?.captchaToken\n      }\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: captchaToken },\n        },\n        redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      await this._removeSession()\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._reauthenticate()\n    })\n  }\n\n  private async _reauthenticate(): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) throw sessionError\n        if (!session) throw new AuthSessionMissingError()\n\n        const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n          headers: this.headers,\n          jwt: session.access_token,\n        })\n        return { data: { user: null, session: null }, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthOtpResponse> {\n    try {\n      if (credentials.type != 'email_change' && credentials.type != 'phone_change') {\n        await this._removeSession()\n      }\n\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   */\n  async getSession() {\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return this._useSession(async (result) => {\n        return result\n      })\n    })\n  }\n\n  /**\n   * Acquires a global lock based on the storage key.\n   */\n  private async _acquireLock<R>(acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n    this._debug('#_acquireLock', 'begin', acquireTimeout)\n\n    try {\n      if (this.lockAcquired) {\n        const last = this.pendingInLock.length\n          ? this.pendingInLock[this.pendingInLock.length - 1]\n          : Promise.resolve()\n\n        const result = (async () => {\n          await last\n          return await fn()\n        })()\n\n        this.pendingInLock.push(\n          (async () => {\n            try {\n              await result\n            } catch (e: any) {\n              // we just care if it finished\n            }\n          })()\n        )\n\n        return result\n      }\n\n      return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n        this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey)\n\n        try {\n          this.lockAcquired = true\n\n          const result = fn()\n\n          this.pendingInLock.push(\n            (async () => {\n              try {\n                await result\n              } catch (e: any) {\n                // we just care if it finished\n              }\n            })()\n          )\n\n          await result\n\n          // keep draining the queue until there's nothing to wait on\n          while (this.pendingInLock.length) {\n            const waitOn = [...this.pendingInLock]\n\n            await Promise.all(waitOn)\n\n            this.pendingInLock.splice(0, waitOn.length)\n          }\n\n          return await result\n        } finally {\n          this._debug('#_acquireLock', 'lock released for storage key', this.storageKey)\n\n          this.lockAcquired = false\n        }\n      })\n    } finally {\n      this._debug('#_acquireLock', 'end')\n    }\n  }\n\n  /**\n   * Use instead of {@link #getSession} inside the library. It is\n   * semantically usually what you want, as getting a session involves some\n   * processing afterwards that requires only one client operating on the\n   * session at once across multiple tabs or processes.\n   */\n  private async _useSession<R>(\n    fn: (\n      result:\n        | {\n            data: {\n              session: Session\n            }\n            error: null\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: AuthError\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: null\n          }\n    ) => Promise<R>\n  ): Promise<R> {\n    this._debug('#_useSession', 'begin')\n\n    try {\n      // the use of __loadSession here is the only correct use of the function!\n      const result = await this.__loadSession()\n\n      return await fn(result)\n    } finally {\n      this._debug('#_useSession', 'end')\n    }\n  }\n\n  /**\n   * NEVER USE DIRECTLY!\n   *\n   * Always use {@link #_useSession}.\n   */\n  private async __loadSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    this._debug('#__loadSession()', 'begin')\n\n    if (!this.lockAcquired) {\n      this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack)\n    }\n\n    try {\n      let currentSession: Session | null = null\n\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      this._debug('#getSession()', 'session from storage', maybeSession)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          this._debug('#getSession()', 'session from storage is not valid')\n          await this._removeSession()\n        }\n      }\n\n      if (!currentSession) {\n        return { data: { session: null }, error: null }\n      }\n\n      const hasExpired = currentSession.expires_at\n        ? currentSession.expires_at <= Date.now() / 1000\n        : false\n\n      this._debug(\n        '#__loadSession()',\n        `session has${hasExpired ? '' : ' not'} expired`,\n        'expires_at',\n        currentSession.expires_at\n      )\n\n      if (!hasExpired) {\n        return { data: { session: currentSession }, error: null }\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { session: null }, error }\n      }\n\n      return { data: { session }, error: null }\n    } finally {\n      this._debug('#__loadSession()', 'end')\n    }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session.\n   * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    if (jwt) {\n      return await this._getUser(jwt)\n    }\n\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return await this._getUser()\n    })\n  }\n\n  private async _getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (jwt) {\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: jwt,\n          xform: _userResponse,\n        })\n      }\n\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n          xform: _userResponse,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._updateUser(attributes, options)\n    })\n  }\n\n  protected async _updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          throw sessionError\n        }\n        if (!sessionData.session) {\n          throw new AuthSessionMissingError()\n        }\n        const session: Session = sessionData.session\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce' && attributes.email != null) {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n\n        const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            ...attributes,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          jwt: session.access_token,\n          xform: _userResponse,\n        })\n        if (userError) throw userError\n        session.user = data.user as User\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('USER_UPDATED', session)\n        return { data: { user: session.user }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._setSession(currentSession)\n    })\n  }\n\n  protected async _setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this._getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._refreshSession(currentSession)\n    })\n  }\n\n  protected async _refreshSession(currentSession?: {\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        if (!currentSession) {\n          const { data, error } = result\n          if (error) {\n            throw error\n          }\n\n          currentSession = data.session ?? undefined\n        }\n\n        if (!currentSession?.refresh_token) {\n          throw new AuthSessionMissingError()\n        }\n\n        const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!session) {\n          return { data: { user: null, session: null }, error: null }\n        }\n\n        return { data: { user: session.user, session }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromURL(isPKCEFlow: boolean): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      } else if (this.flowType == 'pkce' && !isPKCEFlow) {\n        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n      }\n\n      const params = parseParametersFromURL(window.location.href)\n\n      if (isPKCEFlow) {\n        if (!params.code) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this._exchangeCodeForSession(params.code)\n        if (error) throw error\n\n        const url = new URL(window.location.href)\n        url.searchParams.delete('code')\n\n        window.history.replaceState(window.history.state, '', url.toString())\n\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      if (params.error || params.error_description || params.error_code) {\n        throw new AuthImplicitGrantRedirectError(\n          params.error_description || 'Error in URL with unspecified error_description',\n          {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code',\n          }\n        )\n      }\n\n      const {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        refresh_token,\n        expires_in,\n        expires_at,\n        token_type,\n      } = params\n\n      if (!access_token || !expires_in || !refresh_token || !token_type) {\n        throw new AuthImplicitGrantRedirectError('No session defined in URL')\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = parseInt(expires_in)\n      let expiresAt = timeNow + expiresIn\n\n      if (expires_at) {\n        expiresAt = parseInt(expires_at)\n      }\n\n      const actuallyExpiresIn = expiresAt - timeNow\n      if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n        console.warn(\n          `@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`\n        )\n      }\n\n      const issuedAt = expiresAt - expiresIn\n      if (timeNow - issuedAt >= 120) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      } else if (timeNow - issuedAt < 0) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      }\n\n      const { data, error } = await this._getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: expiresIn,\n        expires_at: expiresAt,\n        refresh_token,\n        token_type,\n        user: data.user!!,\n      }\n\n      // Remove tokens from URL\n      window.location.hash = ''\n      this._debug('#_getSessionFromURL()', 'clearing window.location.hash')\n\n      return { data: { session, redirectType: params.type }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    const params = parseParametersFromURL(window.location.href)\n\n    return !!(isBrowser() && (params.access_token || params.error_description))\n  }\n\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCEFlow(): Promise<boolean> {\n    const params = parseParametersFromURL(window.location.href)\n\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n\n    return !!(params.code && currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   *\n   * If using others scope, no `SIGNED_OUT` event is fired!\n   */\n  async signOut(options: SignOut = { scope: 'global' }): Promise<{ error: AuthError | null }> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._signOut(options)\n    })\n  }\n\n  protected async _signOut(\n    { scope }: SignOut = { scope: 'global' }\n  ): Promise<{ error: AuthError | null }> {\n    return await this._useSession(async (result) => {\n      const { data, error: sessionError } = result\n      if (sessionError) {\n        return { error: sessionError }\n      }\n      const accessToken = data.session?.access_token\n      if (accessToken) {\n        const { error } = await this.admin.signOut(accessToken, scope)\n        if (error) {\n          // ignore 404s since user might not exist anymore\n          // ignore 401s since an invalid or expired JWT should sign out the current session\n          if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n            return { error }\n          }\n        }\n      }\n      if (scope !== 'others') {\n        await this._removeSession()\n        await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n        await this._notifyAllSubscribers('SIGNED_OUT', null)\n      }\n      return { error: null }\n    })\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(\n    callback: (event: AuthChangeEvent, session: Session | null) => void | Promise<void>\n  ): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this._debug('#unsubscribe()', 'state change callback with id removed', id)\n\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this._debug('#onAuthStateChange()', 'registered callback with id', id)\n\n    this.stateChangeEmitters.set(id, subscription)\n    ;(async () => {\n      await this.initializePromise\n\n      await this._acquireLock(-1, async () => {\n        this._emitInitialSession(id)\n      })\n    })()\n\n    return { data: { subscription } }\n  }\n\n  private async _emitInitialSession(id: string): Promise<void> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = result\n        if (error) throw error\n\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'session', session)\n      } catch (err) {\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'error', err)\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Sends a password reset request to an email address.\n   * This method supports the PKCE flow.\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      codeChallenge = await generatePKCEChallenge(codeVerifier)\n      codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`\n    this._debug(debugName, 'begin')\n\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          await sleep(attempt * 200) // 0, 200, 400, 800, ...\n\n          this._debug(debugName, 'refreshing attempt', attempt)\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, _, result) =>\n          result &&\n          result.error &&\n          isAuthRetryableFetchError(result.error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION\n      )\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url)\n\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    const debugName = '#_recoverAndRefresh()'\n    this._debug(debugName, 'begin')\n\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      this._debug(debugName, 'session from storage', currentSession)\n\n      if (!this._isValidSession(currentSession)) {\n        this._debug(debugName, 'session is not valid')\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresWithMargin = (currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN\n\n      this._debug(\n        debugName,\n        `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN}s`\n      )\n\n      if (expiresWithMargin) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.error(error)\n\n            if (!isAuthRetryableFetchError(error)) {\n              this._debug(\n                debugName,\n                'refresh failed with a non-retryable error, removing the session',\n                error\n              )\n              await this._removeSession()\n            }\n          }\n        }\n      } else {\n        // no need to persist currentSession again, as we just loaded it from\n        // local storage; persisting it again may overwrite a value saved by\n        // another client with access to the same local storage\n        await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      this._debug(debugName, 'error', err)\n\n      console.error(err)\n      return\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    if (!refreshToken) {\n      throw new AuthSessionMissingError()\n    }\n\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`\n\n    this._debug(debugName, 'begin')\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _notifyAllSubscribers(\n    event: AuthChangeEvent,\n    session: Session | null,\n    broadcast = true\n  ) {\n    const debugName = `#_notifyAllSubscribers(${event})`\n    this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`)\n\n    try {\n      if (this.broadcastChannel && broadcast) {\n        this.broadcastChannel.postMessage({ event, session })\n      }\n\n      const errors: any[] = []\n      const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n        try {\n          await x.callback(event, session)\n        } catch (e: any) {\n          errors.push(e)\n        }\n      })\n\n      await Promise.all(promises)\n\n      if (errors.length > 0) {\n        for (let i = 0; i < errors.length; i += 1) {\n          console.error(errors[i])\n        }\n\n        throw errors[0]\n      }\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    this._debug('#_saveSession()', session)\n\n    await this._persistSession(session)\n  }\n\n  private _persistSession(currentSession: Session) {\n    this._debug('#_persistSession()', currentSession)\n\n    return setItemAsync(this.storage, this.storageKey, currentSession)\n  }\n\n  private async _removeSession() {\n    this._debug('#_removeSession()')\n\n    await removeItemAsync(this.storage, this.storageKey)\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    this._debug('#_removeVisibilityChangedCallback()')\n\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    this._debug('#_startAutoRefresh()')\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-ignore\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-ignore\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately, but in the next pass of the event loop so that\n    // #_initialize can be allowed to complete without recursively waiting on\n    // itself\n    setTimeout(async () => {\n      await this.initializePromise\n      await this._autoRefreshTokenTick()\n    }, 0)\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    this._debug('#_stopAutoRefresh()')\n\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desirable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    this._debug('#_autoRefreshTokenTick()', 'begin')\n\n    try {\n      await this._acquireLock(0, async () => {\n        try {\n          const now = Date.now()\n\n          try {\n            return await this._useSession(async (result) => {\n              const {\n                data: { session },\n              } = result\n\n              if (!session || !session.refresh_token || !session.expires_at) {\n                this._debug('#_autoRefreshTokenTick()', 'no session')\n                return\n              }\n\n              // session will expire in this many ticks (or has already expired if <= 0)\n              const expiresInTicks = Math.floor(\n                (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n              )\n\n              this._debug(\n                '#_autoRefreshTokenTick()',\n                `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`\n              )\n\n              if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                await this._callRefreshToken(session.refresh_token)\n              }\n            })\n          } catch (e: any) {\n            console.error(\n              'Auto refresh tick failed with error. This is likely a transient error.',\n              e\n            )\n          }\n        } finally {\n          this._debug('#_autoRefreshTokenTick()', 'end')\n        }\n      })\n    } catch (e: any) {\n      if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n        this._debug('auto refresh token tick lock not available')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    this._debug('#_handleVisibilityChange()')\n\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(calledFromInitialize: boolean) {\n    const methodName = `#_onVisibilityChanged(${calledFromInitialize})`\n    this._debug(methodName, 'visibilityState', document.visibilityState)\n\n    if (document.visibilityState === 'visible') {\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n\n      if (!calledFromInitialize) {\n        // called when the visibility has changed, i.e. the browser\n        // transitioned from hidden -> visible so we need to see if the session\n        // should be recovered immediately... but to do that we need to acquire\n        // the lock first asynchronously\n        await this.initializePromise\n\n        await this._acquireLock(-1, async () => {\n          if (document.visibilityState !== 'visible') {\n            this._debug(\n              methodName,\n              'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting'\n            )\n\n            // visibility has changed while waiting for the lock, abort\n            return\n          }\n\n          // recover the session\n          await this._recoverAndRefresh()\n        })\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      const codeChallenge = await generatePKCEChallenge(codeVerifier)\n      const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n\n      this._debug(\n        'PKCE',\n        'code verifier',\n        `${codeVerifier.substring(0, 5)}...`,\n        'code challenge',\n        codeChallenge,\n        'method',\n        codeChallengeMethod\n      )\n\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n          body: {\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType,\n            issuer: params.issuer,\n          },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n\n        if (error) {\n          return { data: null, error }\n        }\n\n        if (data?.totp?.qr_code) {\n          data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n        }\n\n        return { data, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          const { data, error } = await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/verify`,\n            {\n              body: { code: params.code, challenge_id: params.challengeId },\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n          if (error) {\n            return { data: null, error }\n          }\n\n          await this._saveSession({\n            expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n            ...data,\n          })\n          await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n          return { data, error }\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          return await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/challenge`,\n            {\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    // both _challenge and _verify independently acquire the lock, so no need\n    // to acquire it here\n\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    // use #getUser instead of #_getUser as the former acquires a lock\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    return this._acquireLock(-1, async () => {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n        if (!session) {\n          return {\n            data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n            error: null,\n          }\n        }\n\n        const payload = this._decodeJWT(session.access_token)\n\n        let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n        if (payload.aal) {\n          currentLevel = payload.aal\n        }\n\n        let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n        const verifiedFactors =\n          session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n        if (verifiedFactors.length > 0) {\n          nextLevel = 'aal2'\n        }\n\n        const currentAuthenticationMethods = payload.amr || []\n\n        return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n      })\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}